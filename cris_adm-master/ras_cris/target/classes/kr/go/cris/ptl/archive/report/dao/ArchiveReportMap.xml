<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.go.cris.ptl.archive.report.dao.ArchiveReportDao">
	
	<!-- 아카이브 보고서 : 목록 조회 -->
	<select id="selectReportList" resultType="archiveReportVo" parameterType="archiveReportVo">
	 
	SELECT *
	     FROM (
	           SELECT  ROWNUM  AS order_sn
	                ,  list.* 
	             FROM (
	                   SELECT  A.REP_ID                      
                            ,  (CASE WHEN A.ORDER_DEPT IS NULL THEN '기타' ELSE A.ORDER_DEPT END) AS ORDER_DEPT
                            ,  A.CHARGER_NM
                            ,  A.PUBYEAR
                            ,  A.ANNUAL_GBN
                            ,  A.ANNUAL_NUM
                            ,  A.CON_TYPE
                            ,  A.PRIVATE_RS
                            ,  A.PRIVATE_STR_DT
                            ,  A.PRIVATE_END_DT
                            ,  A.PROJ_TIT_KOR
                            ,  A.PROJ_TIT_ENG
                            ,  A.PI
                            ,  A.RP                            
                            ,  A.ORG_NAME
                            ,  A.KEYWORD_KOR
                            ,  A.KEYWORD_ENG
                            ,  A.REP_ABS
                            ,  A.BUSINO
                            ,  (CASE WHEN A.SUBJECT IS NULL THEN '기타' ELSE A.SUBJECT END) AS subject
                            ,  (CASE WHEN A.SUBJECT IS NULL THEN '기타' ELSE CF_GET_CODENM(A.SUBJECT) END) AS subject_nm
                            ,  A.RDCNT
                            ,  A.DOWNCNT
                            ,  A.DEL_YN
                            ,  A.FRST_REGIST_PNTTM AS FRST_REGIST_PNTTM               
                            ,  TO_CHAR (A.FRST_REGIST_PNTTM, 'YYYY-MM-DD') AS FRST_REGIST_DT
                            ,  A.FRST_REGISTER_ID
                            ,  A.LAST_UPDT_PNTTM
                            ,  A.LAST_UPDUSR_ID   
                            ,  A.ATCH_FILE_ID
                            ,  ( CASE  (SELECT  COUNT(*)  
			                                FROM  V_ATTFILE_NCMIK_IS 
				                           WHERE  FILE_KEY = A.ATCH_LINK_ID )               
			                        WHEN  0  THEN ''               
			                      ELSE ATCH_LINK_ID END ) AS ATCH_LINK_ID                                    
	                     FROM  PTL_REPORT A             
	                    WHERE  1=1     
	                      AND  A.DEL_YN = 'N'                
                      <if test="searchKeyword != null and searchKeyword !='' ">
				          <if test="searchCondition == 'ALL'">
				               AND ( 
					              		(UPPER(A.PROJ_TIT_KOR) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
					                OR  (UPPER(A.PROJ_TIT_ENG) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
				               		OR	(UPPER(A.PI) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
				               		OR  (UPPER(A.ORG_NAME) LIKE '%' || UPPER(#{searchKeyword})  ||'%')
				               	  )   
				          </if>
				          <if test="searchCondition == 'TITL'">
				               AND ( UPPER(A.PROJ_TIT_KOR) LIKE '%' || UPPER(#{searchKeyword})  ||'%'  OR  UPPER(A.PROJ_TIT_ENG) LIKE '%' || UPPER(#{searchKeyword})  ||'%')
				          </if>	
				           <if test="searchCondition == 'PI'">
				               AND ( UPPER(A.PI) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
				          </if>				      
				          <if test="searchCondition == 'ORG'">
				               AND ( UPPER(A.ORG_NAME) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
				          </if>
			       	  </if>			       	  
			       	   <if test="conParam != null and conParam != ''">
			       	  		<if test="conParam == 'view'">
			       	  			AND A.CON_TYPE IN ( '1' , '0')
			       	  		</if>
	       	  				<if test="conParam == 'notView'">
			       	  		     AND (A.CON_TYPE IN ('1')  OR   (  TO_CHAR(SYSDATE , 'YYYYMMDD') NOT  BETWEEN   A.PRIVATE_STR_DT  AND  A.PRIVATE_END_DT ) )
			       	  		</if>
			       	  </if>	 
			       	  <if test="orderBy != null and orderBy !='' ">				     	
						<if test="orderBy == 'TYPE_A'">
							ORDER BY A.PUBYEAR DESC
						</if>
						<if test="orderBy == 'TYPE_B'">
							ORDER BY A.PUBYEAR ASC
						</if>
						<if test="orderBy == 'TYPE_C'">
							ORDER BY A.PROJ_TIT_KOR ASC
						</if>
						<if test="orderBy == 'TYPE_D'">
							ORDER BY A.PROJ_TIT_KOR DESC
						</if>   
					 </if>   
					   <if test="orderBy == null and orderBy =='' ">	
					    	ORDER BY A.FRST_REGIST_PNTTM DESC
					    </if>   		                                                                                                                                              	                                                                                                                                                                          	           
	                   ) list  WHERE 1=1
	                   <if test="fillterYearList_L != null and fillterYearList_L != ''">
			       	  		AND PUBYEAR IN
			       	  		 <foreach collection="fillterYearList_L" item="year" open="(" close=")" separator="," >
					    	   #{year}
					  	     </foreach>
			       	  </if>	   	 
			       	  <if test="fillterDeptList_L != null and fillterDeptList_L != ''">
		       	  			AND ORDER_DEPT IN
			       	  		 <foreach collection="fillterDeptList_L" item="dept" open="(" close=")" separator="," >
					    	   #{dept}
					  	     </foreach> 
			       	  </if>		       	  
			       	   <if test="fillterSubjectList_L != null and fillterSubjectList_L != ''">
		       	  			AND SUBJECT IN
			       	  		 <foreach collection="fillterSubjectList_L" item="subject" open="(" close=")" separator="," >
					    	   #{subject}
					  	     </foreach> 
			       	  </if> 
	                ) 
	            <![CDATA[        
			 WHERE  order_sn <= (#{page} * #{pageSize})
			   AND  order_sn >=( (#{page} - 1) * #{pageSize} + 1)                  
			]]>          
	  
	</select>
	  
	   
	
		<!-- 아카이브 보고서 : 조회수 증가  -->
	<update id="updateReadCnt" parameterType="archiveReportVo">
		UPDATE PTL_REPORT
		   SET RDCNT = RDCNT + 1
		 WHERE TRIM(REP_ID) = TRIM(#{rep_id})
	</update>
	
	 <!-- 아카이브 보고서 : 총 개수  -->
	<select id="selectReportTotalCount" resultType="int" parameterType="archiveReportVo">
	SELECT  NVL(SUM (total_count) , 0) AS total_count
		FROM ( 
          SELECT  COUNT(REP_ID) AS total_count   
               ,  PUBYEAR  AS PUBYEAR
    		   ,  (CASE  WHEN ORDER_DEPT IS NULL THEN '기타'  ELSE ORDER_DEPT   END)  AS ORDER_DEPT
               ,  (CASE  WHEN SUBJECT IS NULL THEN '기타'  ELSE SUBJECT   END)  AS SUBJECT
            FROM  PTL_REPORT         
           WHERE  1=1 
             AND  DEL_YN = 'N'                                                               
        <if test="searchKeyword != null and searchKeyword !='' ">
          <if test="searchCondition == 'ALL'">
               AND ( 
	              		(UPPER(PROJ_TIT_KOR) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
	                OR  (UPPER(PROJ_TIT_ENG) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
               		OR	(UPPER(PI) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
               		OR  (UPPER(ORG_NAME) LIKE '%' || UPPER(#{searchKeyword})  ||'%')
               	  )   
          </if>
          <if test="searchCondition == 'TITL'">
               AND ( UPPER(PROJ_TIT_KOR) LIKE '%' || UPPER(#{searchKeyword})  ||'%'  OR  UPPER(PROJ_TIT_ENG) LIKE '%' || UPPER(#{searchKeyword})  ||'%')
          </if>	
           <if test="searchCondition == 'PI'">
               AND ( UPPER(PI) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
          </if>				      
          <if test="searchCondition == 'ORG'">
               AND ( UPPER(ORG_NAME) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
          </if>     
        </if>                 
      	    <if test="conParam != null and conParam != ''">
       	  		<if test="conParam == 'view'">
       	  			AND CON_TYPE IN ( '1' , '0')
       	  		</if>
 	  			<if test="conParam == 'notView'">
     	  		    AND (CON_TYPE IN ('1')  OR   (  TO_CHAR(SYSDATE , 'YYYYMMDD') NOT  BETWEEN   PRIVATE_STR_DT  AND  PRIVATE_END_DT ) )
       	  		</if>
       	  </if>	  
 		GROUP BY  PUBYEAR ,ORDER_DEPT, SUBJECT                                                                     
        ORDER BY  SUBJECT DESC   
	) WHERE 1=1
		<if test="fillterYearList_L != null and fillterYearList_L != ''">
     	  	AND PUBYEAR IN
     	  	 <foreach collection="fillterYearList_L" item="year" open="(" close=")" separator="," >
    	      #{year}
  	        </foreach>
      	 </if>      	
      	 <if test="fillterDeptList_L != null and fillterDeptList_L != ''">
     	  	AND ORDER_DEPT IN
      	  	 <foreach collection="fillterDeptList_L" item="dept" open="(" close=")" separator="," >
	    	   #{dept}
	  	     </foreach> 
      	  </if>    
      	   <if test="fillterSubjectList_L != null and fillterSubjectList_L != ''">
     	  	AND SUBJECT IN
      	  	 <foreach collection="fillterSubjectList_L" item="subject" open="(" close=")" separator="," >
	    	   #{subject}
	  	     </foreach> 
      	  </if> 
	    
	</select>
	
	
	 <!-- 아카이브 보고서 : 상세 정보 조회  -->
	 <select id="selectReportInfo" resultType="archiveReportVo"  parameterType="archiveReportVo">
	 	
		   SELECT  A.REP_ID		   
				,  A.ORDER_DEPT
				,  A.CHARGER_NM
				,  A.PUBYEAR
				,  A.ANNUAL_GBN
				,  A.ANNUAL_NUM				
				,  A.CON_TYPE
				,  A.PRIVATE_RS
				,  A.PRIVATE_STR_DT
				,  A.PRIVATE_END_DT
				,  A.PROJ_TIT_KOR
				,  A.PROJ_TIT_ENG
				,  A.PI
				,  A.RP				
				,  A.ORG_NAME
				,  A.KEYWORD_KOR
				,  A.KEYWORD_ENG
				,  A.REP_ABS
				,  A.BUSINO
				,  A.SUBJECT
				,  A.RDCNT
				,  A.DOWNCNT
				,  A.DEL_YN
				,  A.ATCH_FILE_ID
				,  ( CASE  (SELECT  COUNT(*)  
			                                FROM  V_ATTFILE_NCMIK_IS 
				                           WHERE  FILE_KEY = A.ATCH_LINK_ID )               
			                        WHEN  0  THEN ''               
			                      ELSE A.ATCH_LINK_ID END ) AS ATCH_LINK_ID  
				,  TO_CHAR (A.FRST_REGIST_PNTTM, 'YYYY-MM-DD') FRST_REGIST_PNTTM            
				,  A.FRST_REGISTER_ID
				,  TO_CHAR (A.LAST_UPDT_PNTTM, 'YYYY-MM-DD') LAST_UPDT_PNTTM
				,  A.LAST_UPDUSR_ID
				,  (SELECT  EMPLYRNM
							 FROM  VWR_EMPLYR
							WHERE  EMPLYRKEY = A.FRST_REGISTER_ID) AS FRST_REGISTER_NM 
            FROM  PTL_REPORT A      
           WHERE  1=1
             AND  A.DEL_YN = 'N'
             AND  TRIM(A.REP_ID) = #{rep_id}
	
	</select>


	<!-- 아카이브 보고서 : 검색결과제한 조회 -->
	<select id="selectReportFillterList" resultType="archiveReportVo" parameterType="archiveReportVo">
	
		SELECT * FROM (
                SELECT  *  FROM (
				                SELECT  PUBYEAR AS  fillter_code
				                     ,  PUBYEAR AS  fillter_data                      
				                     ,  COUNT(PUBYEAR)  AS fillter_cnt 
				                     ,  'YEAR' AS fillter_gbn  
				                     , '1' AS fillter_order
				                  FROM  PTL_REPORT 
			                     WHERE  DEL_YN = 'N' 
		                     <if test="searchKeyword != null and searchKeyword !='' ">
						          <if test="searchCondition == 'ALL'">
						               AND ( 
							              		(UPPER(PROJ_TIT_KOR) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
							                OR  (UPPER(PROJ_TIT_ENG) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
						               		OR	(UPPER(PI) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
						               		OR  (UPPER(ORG_NAME) LIKE '%' || UPPER(#{searchKeyword})  ||'%')
						               	  )   
						          </if>
						          <if test="searchCondition == 'TITL'">
						               AND ( UPPER(PROJ_TIT_KOR) LIKE '%' || UPPER(#{searchKeyword})  ||'%'  OR  UPPER(PROJ_TIT_ENG) LIKE '%' || UPPER(#{searchKeyword})  ||'%')
						          </if>	
						           <if test="searchCondition == 'PI'">
						               AND ( UPPER(PI) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
						          </if>				      
						          <if test="searchCondition == 'ORG'">
						               AND ( UPPER(ORG_NAME) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
						          </if>     
					         </if>                 					      	    
		                      <if test="conParam != null and conParam != ''">
					       	  		<if test="conParam == 'view'">
					       	  			AND CON_TYPE IN ( '1' , '0')
					       	  		</if>
			       	  				<if test="conParam == 'notView'">
					       	  		     AND (CON_TYPE IN ('1')  OR   ( TO_CHAR(SYSDATE , 'YYYYMMDD') NOT  BETWEEN   PRIVATE_STR_DT  AND  PRIVATE_END_DT ) )
					       	  		</if>
					       	  </if>	 
				              GROUP BY  PUBYEAR
				              ORDER BY PUBYEAR DESC
           				      )  
         		     <if test="fillterYear != null and fillterYear !='' ">           				            
           			 <![CDATA[  	 WHERE  ROWNUM <=  #{fillterYear}  ]]>      
           			 </if>                
             UNION ALL
   				SELECT * FROM (
				                SELECT  ( CASE WHEN ORDER_DEPT IS NULL THEN '기타' ELSE ORDER_DEPT END ) AS fillter_code
				                     ,  (CASE WHEN ORDER_DEPT IS NULL THEN '기타' ELSE ORDER_DEPT END) AS fillter_data
				                     ,  COUNT (CASE WHEN ORDER_DEPT IS NULL THEN '기타' ELSE ORDER_DEPT END) AS fillter_cnt
				                     ,  'DEPT' AS fillter_gbn
				                     ,  '2' AS fillter_order
				                  FROM  PTL_REPORT 
				                 WHERE  DEL_YN = 'N' 
			                 <if test="searchKeyword != null and searchKeyword !='' ">
						          <if test="searchCondition == 'ALL'">
						               AND ( 
							              		(UPPER(PROJ_TIT_KOR) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
							                OR  (UPPER(PROJ_TIT_ENG) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
						               		OR	(UPPER(PI) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
						               		OR  (UPPER(ORG_NAME) LIKE '%' || UPPER(#{searchKeyword})  ||'%')
						               	  )   
						          </if>
						          <if test="searchCondition == 'TITL'">
						               AND ( UPPER(PROJ_TIT_KOR) LIKE '%' || UPPER(#{searchKeyword})  ||'%'  OR  UPPER(PROJ_TIT_ENG) LIKE '%' || UPPER(#{searchKeyword})  ||'%')
						          </if>	
						           <if test="searchCondition == 'PI'">
						               AND ( UPPER(PI) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
						          </if>				      
						          <if test="searchCondition == 'ORG'">
						               AND ( UPPER(ORG_NAME) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
						          </if>     
					         </if> 
			                  <if test="conParam != null and conParam != ''">
				       	  		<if test="conParam == 'view'">
				       	  			AND CON_TYPE IN ( '1' , '0')
				       	  		</if>
		       	  				<if test="conParam == 'notView'">
				       	  		     AND (CON_TYPE IN ('1')  OR   ( TO_CHAR(SYSDATE , 'YYYYMMDD') NOT  BETWEEN   PRIVATE_STR_DT  AND  PRIVATE_END_DT ) )
				       	  		</if>
				       	 	  </if>	 
				              GROUP BY  ORDER_DEPT
				              ORDER BY  (CASE WHEN fillter_order = '2' THEN  (CASE WHEN fillter_code = '기타' THEN 1 END)   END) DESC , fillter_cnt DESC,  fillter_code ASC 
				              )  
			         <if test="fillterDept != null and fillterDept !='' ">           				            
           			 <![CDATA[  	 WHERE  ROWNUM <=  #{fillterDept}  ]]>      
           			 </if>       
    		 UNION ALL
   				SELECT * FROM (
		                   		SELECT  (CASE WHEN  A.SUBJECT   IS NULL THEN '기타' ELSE A.SUBJECT END) AS  fillter_code                                  
				                	 ,  (CASE WHEN  B.CD_NM  IS NULL THEN '기타'  ELSE  B.CD_NM END) AS fillter_data
				             		 ,  COUNT(CASE WHEN  A.SUBJECT   IS NULL THEN '기타' ELSE A.SUBJECT END)  AS  fillter_cnt 
				             		 ,  'SUBJECT' AS fillter_gbn
				             		 ,  '3' AS fillter_order
				          		  FROM  PTL_REPORT A , CMMN_CD_MNG B 
				              	 WHERE  A.DEL_YN = 'N' 
				              	   AND  A.SUBJECT = B.CD(+)
				             	   AND  B.UP_CD(+) = 'ACHIVE_CD'
				              	   AND  B.USE_YN(+) = 'Y'
			              	    <if test="searchKeyword != null and searchKeyword !='' ">
						          <if test="searchCondition == 'ALL'">
						               AND ( 
							              		(UPPER(PROJ_TIT_KOR) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
							                OR  (UPPER(PROJ_TIT_ENG) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
						               		OR	(UPPER(PI) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
						               		OR  (UPPER(ORG_NAME) LIKE '%' || UPPER(#{searchKeyword})  ||'%')
						               	  )   
						          </if>
						          <if test="searchCondition == 'TITL'">
						               AND ( UPPER(PROJ_TIT_KOR) LIKE '%' || UPPER(#{searchKeyword})  ||'%'  OR  UPPER(PROJ_TIT_ENG) LIKE '%' || UPPER(#{searchKeyword})  ||'%')
						          </if>	
						           <if test="searchCondition == 'PI'">
						               AND ( UPPER(PI) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
						          </if>				      
						          <if test="searchCondition == 'ORG'">
						               AND ( UPPER(ORG_NAME) LIKE '%' || UPPER(#{searchKeyword})  ||'%' )
						          </if>     
					         </if> 
		              	   		  <if test="conParam != null and conParam != ''">
				       	  			<if test="conParam == 'view'">
					       	  			AND CON_TYPE IN ( '1' , '0')
					       	  		</if>
			       	  				<if test="conParam == 'notView'">
					       	  		     AND (CON_TYPE IN ('1')  OR   ( TO_CHAR(SYSDATE , 'YYYYMMDD') NOT  BETWEEN   PRIVATE_STR_DT  AND  PRIVATE_END_DT ) )
					       	  		</if>
					       	 	  </if>	 
				      		  GROUP BY  A.SUBJECT,  B.CD_NM 
				      		  ORDER BY (CASE WHEN fillter_order = '3' THEN  (CASE WHEN fillter_code = '기타' THEN 1 END)   END) DESC , fillter_cnt DESC,  fillter_code ASC 
				              )  
			         <if test="fillterSubject != null and fillterSubject !='' ">           				            
           			 <![CDATA[  	 WHERE  ROWNUM <=  #{fillterSubject}  ]]>      
           			 </if>       
	       )
            ORDER BY fillter_order  ,  (  CASE WHEN   fillter_order   = '1'   THEN  fillter_code   END ) DESC
                                    ,  (  CASE WHEN   fillter_order   = '2'   THEN  (CASE WHEN fillter_code ='기타' THEN 1   END)  END) DESC   
                                    ,  (  CASE WHEN   fillter_order   = '3'   THEN  (CASE WHEN fillter_code ='기타' THEN 1   END)  END) DESC  ,  fillter_cnt DESC , fillter_code ASC 
	
	</select>
	
	<insert id="insertArchiveReport" parameterType="archiveReportVo">
	INSERT INTO PTL_REPORT (
				   REP_ID
				,  ORDER_DEPT
				,  CHARGER_NM
				,  PUBYEAR
				,  ANNUAL_GBN
				,  ANNUAL_NUM
				,  CON_TYPE
				,  PRIVATE_RS
				,  PRIVATE_STR_DT
				,  PRIVATE_END_DT
				,  PROJ_TIT_KOR
				,  PROJ_TIT_ENG
				,  PI
				,  RP				
				,  ORG_NAME
				,  KEYWORD_KOR
				,  KEYWORD_ENG
				,  REP_ABS
				,  BUSINO
				,  SUBJECT
				,  RDCNT
				,  DOWNCNT
				,  DEL_YN
				,  ATCH_FILE_ID
				,  ATCH_LINK_ID
				,  FRST_REGIST_PNTTM       
				,  FRST_REGISTER_ID
				,  LAST_UPDT_PNTTM
				,  LAST_UPDUSR_ID
			)
			VALUES
			(
				   #{rep_id, jdbcType=VARCHAR}				
				,  #{order_dept, jdbcType=VARCHAR}
				,  #{charger_nm, jdbcType=VARCHAR}
				,  #{pubyear, jdbcType=VARCHAR}
				,  #{annual_gbn, jdbcType=VARCHAR}
				,  #{annual_num, jdbcType=VARCHAR}
				,  #{con_type, jdbcType=VARCHAR}
				,  #{private_rs, jdbcType=VARCHAR}
				,  REPLACE(#{private_str_dt, jdbcType=VARCHAR} , '-' , '')
				,  REPLACE(#{private_end_dt, jdbcType=VARCHAR} , '-' , '')
				,  #{proj_tit_kor, jdbcType=VARCHAR}
				,  #{proj_tit_eng, jdbcType=VARCHAR}
				,  #{pi, jdbcType=VARCHAR}
				,  #{rp, jdbcType=VARCHAR}
				,  #{org_name, jdbcType=VARCHAR}
				,  #{keyword_kor, jdbcType=VARCHAR}
				,  #{keyword_eng, jdbcType=VARCHAR}
				,  #{rep_abs, jdbcType=VARCHAR}
				,  #{busino, jdbcType=VARCHAR}
				,  #{subject, jdbcType=VARCHAR}
				,  NVL(#{rdcnt, jdbcType=VARCHAR}  , 0)
				,  NVL(#{downcnt, jdbcType=VARCHAR}  , 0)
				,  'N'
				,  #{atch_file_id, jdbcType=VARCHAR}
				,  #{atch_link_id, jdbcType=VARCHAR}
				,  SYSDATE     
				,  #{frst_register_id, jdbcType=VARCHAR} 
				,  ''
				,  ''
				)
	</insert>
	
	<update id="updateArchiveReport" parameterType="archiveReportVo">
	   UPDATE  PTL_REPORT SET
   			       ORDER_DEPT			=  #{order_dept, jdbcType=VARCHAR}	
   			    ,  BUSINO				=  #{busino, jdbcType=VARCHAR}
   			    ,  CHARGER_NM			=  #{charger_nm, jdbcType=VARCHAR}	
				,  PUBYEAR				=  #{pubyear, jdbcType=VARCHAR}	
				,  ANNUAL_GBN			=  #{annual_gbn, jdbcType=VARCHAR}	
				,  ANNUAL_NUM			=  #{annual_num, jdbcType=VARCHAR}	
				,  CON_TYPE				=  #{con_type, jdbcType=VARCHAR}	
				,  PRIVATE_RS	 		=  #{private_rs, jdbcType=VARCHAR}	
				,  PRIVATE_STR_DT		=  REPLACE(#{private_str_dt, jdbcType=VARCHAR} , '-' , '')	
				,  PRIVATE_END_DT		=  REPLACE(#{private_end_dt, jdbcType=VARCHAR} , '-' , '')	
				,  PROJ_TIT_KOR			=  #{proj_tit_kor, jdbcType=VARCHAR}	
				,  PROJ_TIT_ENG			=  #{proj_tit_eng, jdbcType=VARCHAR}	
				,  PI  					=  #{pi, jdbcType=VARCHAR}	
				,  RP					=  #{rp, jdbcType=VARCHAR}					
				,  ORG_NAME				=  #{org_name, jdbcType=VARCHAR}	
				,  KEYWORD_KOR			=  #{keyword_kor, jdbcType=VARCHAR}	
				,  KEYWORD_ENG 			=  #{keyword_eng, jdbcType=VARCHAR}	
				,  REP_ABS	 			=  #{rep_abs, jdbcType=VARCHAR}	
				,  ATCH_FILE_ID 	=  	#{atch_file_id, jdbcType=VARCHAR}		
				,  ATCH_LINK_ID 	=  	#{atch_link_id, jdbcType=VARCHAR}		
				,  SUBJECT   = 			#{subject, jdbcType=VARCHAR}
				,  LAST_UPDT_PNTTM		=  SYSDATE     	
				,  LAST_UPDUSR_ID 		= #{last_updusr_id, jdbcType=VARCHAR} 
	    WHERE  REP_ID = #{rep_id, jdbcType=VARCHAR}  				

	</update>
	
	<update id="deleteArchiveReport" parameterType="archiveReportVo">
	   UPDATE  PTL_REPORT SET
   			   DEL_YN                        = 'Y'
			,  LAST_UPDT_PNTTM               = SYSDATE 
			,  LAST_UPDUSR_ID 				 = #{last_updusr_id, jdbcType=VARCHAR} 
	    WHERE  REP_ID = #{rep_id, jdbcType=VARCHAR}  				
	</update>
	
	<select id="selectReportMaxId" resultType="String" >
		SELECT MAX(REP_ID) AS rep_id FROM PTL_REPORT 
	</select>
	
	
	
	
  
  		<!-- 아카이브 보고서 : 조회수 증가  -->
	<update id="updateDownCnt" parameterType="archiveReportVo">
		UPDATE PTL_REPORT
		   SET DOWNCNT = DOWNCNT + 1
		 WHERE TRIM(REP_ID) = TRIM(#{rep_id})
	</update>
	
  	<insert id="insertArchiveAnnualInfo" parameterType="archiveAnnualInfoVo">
			INSERT INTO PTL_ANNUAL_INFO (	
				   ANNUAL_SEQ
				,  PERIOD_GBN
				,  RESEARCH_DT
				,  RESEARCH_FUND
				,  REP_ID
				,  DEL_YN
				,  FRST_REGIST_PNTTM
				,  FRST_REGISTER_ID
				,  LAST_UPDT_PNTTM
				,  LAST_UPDUSR_ID
			)
			VALUES
			(
				   ptl_annualInfo_seq.NEXTVAL
				,  #{period_gbn, jdbcType=VARCHAR} 
				,  #{research_dt, jdbcType=VARCHAR} 
				,  #{research_fund, jdbcType=VARCHAR} 
				,  #{rep_id, jdbcType=VARCHAR} 		
				,  'N'			
				,  SYSDATE 
				,  #{frst_register_id, jdbcType=VARCHAR} 
				,  SYSDATE
				,  #{last_updusr_id, jdbcType=VARCHAR} 
			)
	</insert>
	
	
	 <!-- 아카이브 보고서 : 상세 정보 조회  -->
	 <select id="selectAnnualInfo" resultType="archiveAnnualInfoVo"  parameterType="archiveReportVo">
	 	
		   SELECT  A.ANNUAL_SEQ
				,  A.PERIOD_GBN
				,  A.RESEARCH_DT
				,  A.RESEARCH_FUND
				,  A.REP_ID
				,  A.DEL_YN				
				,  TO_CHAR (A.FRST_REGIST_PNTTM, 'YYYY-MM-DD') FRST_REGIST_PNTTM            
				,  A.FRST_REGISTER_ID
				,  TO_CHAR (A.LAST_UPDT_PNTTM, 'YYYY-MM-DD') LAST_UPDT_PNTTM
				,  A.LAST_UPDUSR_ID
            FROM  PTL_ANNUAL_INFO A      
           WHERE  1=1
             AND  A.DEL_YN = 'N'
             AND  TRIM(A.REP_ID) = #{rep_id}
        ORDER BY  A.REP_ID , TO_NUMBER(A.PERIOD_GBN) ASC 
	
	</select>
	
		  <!-- 첨부파일 삭제 -->
    <delete id="deleteArchiveAnnualInfo" parameterType="archiveAnnualInfoVo">
		  DELETE  PTL_ANNUAL_INFO			  
	       WHERE  REP_ID = #{rep_id}
	</delete>
  
  <update id="updateArchiveLinkRnd" parameterType="archiveReportVo">
       
 		 UPDATE PTL_RND SET
	                     ARCHIVE_REP_ID    = ''
	                  ,  ARCHIVE_BUSINO    = ''                   
	                  ,  LAST_UPDT_PNTTM   = SYSDATE
	                  ,  LAST_UPDUSR_ID    = #{last_updusr_id, jdbcType=VARCHAR} 
	              WHERE  ARCHIVE_REP_ID = #{rep_id, jdbcType=VARCHAR}                      
    </update>
    
</mapper>
