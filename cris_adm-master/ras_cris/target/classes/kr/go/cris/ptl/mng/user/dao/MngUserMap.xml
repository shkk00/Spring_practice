<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.go.cris.ptl.mng.user.dao.MngUserDao">

 <sql id="getPagingSelect">
   SELECT page.* FROM ( SELECT rownum AS data_seq, list.*
     FROM (
 </sql>

 <sql id="getPagingWhere">
 <![CDATA[
           ) list) page
     WHERE page.data_seq >= ((#{page} - 1) * 20 + 1)
       AND page.data_seq <= (#{page} * 20)
 ]]>
 </sql>
 
  <!-- 사용자 관리 - 사용자 정보-->
  <select id="selectUserInfo" resultType="ptlLoginVo" parameterType="String">
   SELECT 
          loginid as loginid    /* 사용저 ID */ 
        , USER_PWD as user_pwd   /* 비밀번호 */ 
        , USER_NM_KOR as user_nm_kor   /* 이름_국문 */ 
        , USER_NM_ENG as user_nm_eng   /* 이름_영문 */ 
        , BRTH_DT as brth_dt   /* 생년월일 */ 
        , SEX_GB as sex_gb   /* 성별구분 */ 
        , TEL1 as tel1   /* 전화번호1 */ 
        , TEL2 as tel2   /* 전화번호2 */ 
        , TEL3 as tel3   /* 전화번호3 */ 
        , CLPN1 as clpn1   /* 핸드폰번호1 */ 
        , CLPN2 as clpn2   /* 핸드폰번호2 */ 
        , CLPN3 as clpn3   /* 핸드폰번호3 */ 
        , ETC_CLPN as etc_clpn   /* 국외번호 */ 
        , UNV_BSS_NM as unv_bss_nm   /* 대학(직장)명 */ 
        , PRCSS_CODE as prcss_code   /* 과정명 */ 
        , MAJOR_NM as major_nm   /* 전공 */ 
        , PAR_MAJOR_NM as par_major_nm   /* 세부전공분야 */ 
        , GRADU_DT as gradu_dt   /* 졸업예정일자 */ 
        , REP_PAPER as rep_paper   /* 대표논문 */ 
        , PPR_OUT_RSLT as ppr_out_rslt   /* 논문 외 실적 */ 
        , EML as eml   /* 이메일 */ 
        , EML_SEND_YN as eml_send_yn   /* 이메일수신여부 */ 
        , SMS_SEND_YN as sms_send_yn   /* SMS수신여부 */ 
        , USE_YN as use_yn   /* 사용여부 */ 
        , MODIFIY_ID as modifiy_id   /* 수정자ID */ 
        , MODIFIY_DTTM as modifiy_dttm   /* 수정일 */ 
        , CREATE_ID as create_id   /* 생성자ID */ 
        , CREATE_DTTM as create_dttm   /* 생성일시 */ 
        , USER_SN as user_sn
    FROM USER_MNG  /* 사용자관리 */ 
 WHERE 1=1 
 	<if test="value != null and value != ''">
 		AND loginid = #{value} 
 	</if>
  </select>
  
  <select id="selectUserList" resultType="ptlLoginVo" parameterType="ptlLoginVo">
  <include refid="getPagingSelect"></include>
   SELECT DISTINCT(a.EMPLYRKEY) AS emplyrkey,
               a.USER_ID AS loginid,
               a.EMPLYRNM AS emplyrnm,
               a.PASSWORD AS password,
               a.SECSNAT AS secsnat,
               a.INSTTSN AS insttsn,
               a.sha2 AS sha2,
               EMPLYRSE AS elibagree,
               (select listagg(USER_AUTH_CD,',') within group(order by USER_AUTH_CD) FROM CMMN_USER_AUTH_MNG WHERE USER_ID =a.USER_ID ) as usrAuth
       FROM CRIS_EMPLYR a
           ,CMMN_USER_AUTH_MNG b
      WHERE a.USER_ID = b.USER_ID(+)
             <if test="loginid != null and loginid != ''">
             	AND a.USER_ID = #{loginid}
		    </if>
             <if test="usrAuth != null and usrAuth != ''">
             		  AND USER_AUTH_CD like '%'||#{usrAuth}||'%'
		    </if>
		    <if test="searchText != null and searchText != ''">
		    	<if test ="searchStatus == 'name'">
		    		  AND a.EMPLYRNM like '%'||#{searchText}||'%'
    		    </if>
    		    <if test ="searchStatus == 'id'">
		    		  AND a.USER_ID like '%'|| #{searchText}||'%'
    		    </if>
    		    <if test ="searchStatus == 'sn'">
		    		  AND a.EMPLYRKEY like '%'||#{searchText}||'%'
    		    </if>
		    </if>
 <include refid="getPagingWhere"></include>
</select>
  
<select id="selectUserCnt" resultType="int" parameterType="ptlLoginVo">
   SELECT COUNT(*) as cnt
    FROM CRIS_EMPLYR a /* 사용자관리 */ 
 	WHERE 1=1 
	   <if test="usrAuth != null and usrAuth != ''">
	      AND USER_AUTH_CD like '%'||#{usrAuth}||'%'
	   </if>
	   <if test="searchText != null and searchText != ''">
	   	<if test ="searchStatus == 'name'">
	   		  AND a.EMPLYRNM like '%'||#{searchText}||'%'
	 		    </if>
	 		    <if test ="searchStatus == 'id'">
	   		  AND a.USER_ID like '%'|| #{searchText}||'%'
	 		    </if>
	 		    <if test ="searchStatus == 'sn'">
	   		  AND a.EMPLYRKEY like '%'||#{searchText}||'%'
	 		    </if>
	   </if>
</select>  
  
  
<update id="updateUser" parameterType="ptlLoginVo">
  UPDATE USER_MNG  /* 사용자관리 */ 
	 SET  USER_PWD =  NVL(#{user_pwd, jdbcType=VARCHAR},USER_PWD)   /* 비밀번호*/ 
        , USER_NM_KOR =  #{user_nm_kor}    /* 이름_국문 */ 
        , USER_NM_ENG =  #{user_nm_eng}    /* 이름_영문 */ 
        , BRTH_DT =  REPLACE(#{brth_dt}, '-'}    /* 생년월일 */ 
        , SEX_GB =  #{sex_gb}    /* 성별구분 */ 
        , TEL1 =  #{tel1}    /* 전화번호1 */ 
        , TEL2 =  #{tel2}    /* 전화번호2 */ 
        , TEL3 =  #{tel3}    /* 전화번호3 */ 
        , CLPN1 =  #{clpn1}    /* 핸드폰번호1 */ 
        , CLPN2 =  #{clpn2}    /* 핸드폰번호2 */ 
        , CLPN3 =  #{clpn3}    /* 핸드폰번호3 */ 
        , ETC_CLPN =  #{etc_clpn}    /* 국외번호 */ 
        , UNV_BSS_NM =  #{unv_bss_nm}    /* 대학(직장)명 */ 
        , PRCSS_CODE =  #{prcss_code}    /* 과정명 */ 
        , MAJOR_NM =  #{major_nm}    /* 전공 */ 
        , PAR_MAJOR_NM =  #{par_major_nm}    /* 세부전공분야 */ 
        , GRADU_DT = REPLACE(#{gradu_dt}, '-'}    /* 졸업예정일자 */ 
        , REP_PAPER =  #{rep_paper}    /* 대표논문 */ 
        , PPR_OUT_RSLT =  #{ppr_out_rslt}    /* 논문 외 실적 */ 
        , EML =  #{eml}    /* 이메일 */ 
        , EML_YN =  NVL(#{eml_yn, jdbcType=VARCHAR},EML_YN)    /* 이메일전송여부 */ 
        , SMS_YN =  NVL(#{sms_yn, jdbcType=VARCHAR},SMS_YN)    /* SMS전송여부 */ 
        , USE_YN =  NVL(#{use_yn, jdbcType=VARCHAR},USE_YN)    /* 사용여부 */ 
        , MODIFIY_ID  =   #{modifiy_id}    /* 수정자ID */ 
        , MODIFIY_DTTM =  SYSDATE    /* 수정일자 */ 
 WHERE 1=1 
       AND loginid = #{loginid} 
  </update>
  
  <insert id="insertUserCls" parameterType="mngUserClsVo">
  INSERT INTO 
        USER_CLS_MNG  /* 지원자관심정보 */ 
        ( 
          loginid
        , CLS_VAL
        , MODIFIY_DTTM
        , MODIFIY_ID
        , CREATE_DTTM
        , CREATE_ID
     ) 
 VALUES 
     ( 
          #{loginid}    /* 사용자id */ 
        , #{cls_val}    /* 분류코드 */ 
        , SYSDATE       /* 수정일시 */ 
        , #{modifiy_id} /* 수정자 */ 
        , SYSDATE       /* 등록일시 */ 
        , #{create_id}  /* 등록자 */ 
     ) 
  </insert>

<select id="selectUserCls" parameterType="String" resultType="mngUserClsVo">
 SELECT 
         loginid as loginid    /* 사용자ID */ 
       , CLS_GBN as cls_gbn   /* 분류구분 */ 
       , CLS_VAL as cls_val   /* 분류코드 */ 
       , MODIFIY_DTTM as modifiy_dttm   /* 수정일시 */ 
       , MODIFIY_ID as modifiy_id   /* 수정자 */ 
       , CREATE_DTTM as create_dttm   /* 등록일시 */ 
       , CREATE_ID as create_id   /* 등록자 */ 
  FROM USER_CLS_MNG  /* 지원자관심정보 */ 
 WHERE 1=1 
   AND loginid = #{value} 
 ORDER BY CLS_GBN
</select>
<delete id="deleteUserCls" parameterType="String" >
	DELETE FROM USER_CLS_MNG
     WHERE 1=1 
       AND loginid = #{value} 
</delete>

<delete id="deleteUserAuth" parameterType="String">
	DELETE FROM CMMN_USER_AUTH_MNG
	WHERE 1=1
	  AND USER_ID = #{value} 
</delete>

<insert id="insertUserAuth" parameterType="mngUserAuthVo">
 INSERT INTO 
        CMMN_USER_AUTH_MNG  /* 사용자권한 */ 
        ( 
          USER_ID
        , USER_AUTH_CD
        , CREATE_ID
        , CREATE_DTTM
        , MODIFIY_ID
        , MODIFIY_DTTM
     ) 
 VALUES 
     ( 
          #{loginid, jdbcType = VARCHAR}         /* 사용자id */ 
        , #{user_auth_cd, jdbcType = VARCHAR}   /* 사용자권한 */ 
        , #{create_id, jdbcType = VARCHAR}    	/* null */ 
        , SYSDATE    		/* null */ 
        , #{modifiy_id, jdbcType = VARCHAR}     /* null */ 
        , SYSDATE    		/* null */ 
     ) 

</insert>

<select id="selectUserAuth" parameterType="String" resultType="mngUserAuthVo"> 
 SELECT 
          a.user_id as loginid    /* 사용자ID */ 
        , a.USER_AUTH_CD as user_auth_cd   /* 사용자권한 */ 
        , a.CREATE_ID as create_id   /* 생성자 */ 
        , a.CREATE_DTTM as create_dttm   /* 생성일자 */ 
        , a.MODIFIY_ID as modifiy_id   /* 수정자 */ 
        , a.MODIFIY_DTTM as modifiy_dttm   /* 수정일자 */ 
    FROM CMMN_USER_AUTH_MNG a  /* 사용자권 */ 
 WHERE 1=1
   AND a.USER_ID =#{value} 
   
</select>


  <!-- 사용자 메일정보  -->
  <select id="selectMngInfo" resultType="ptlLoginVo" parameterType="String">
   SELECT 
          a.loginid as loginid    /* 사용자ID */ 
        , a.USER_NM_KOR as user_nm_kor   /* 이름 */ 
        , a.CLPN1 as clpn1   /* 핸드폰1 */ 
        , a.CLPN2 as clpn2   /* 핸드폰2 */ 
        , a.CLPN3 as clpn3   /* 핸드폰3 */ 
        , a.ETC_CLPN as etc_clpn   /* 국외번호 */ 
        , a.EML as eml   /* 이메일 */ 
    FROM USER_MNG a /* 사용자관리 */ 
      ,  CMMN_USER_AUTH_MNG b
 WHERE 1=1 
     AND a.loginid =b.loginid
    <if test="value != null and value != ''">
 		AND b.USER_AUTH_CD = #{value} 
 	</if>
 ORDER BY a.USER_NM_KOR
  </select>
  
  <!-- 사용자 로그정보  -->
  <select id="selectUserLogList" resultType="mngUserLogVo" parameterType="mngUserLogVo">
 SELECT 
          a.SEQ as seq    /* 순번 */ 
        , TO_CHAR(a.LOG_DTTM,'YYYY-MM-DD HH24:MI:SS') as log_dttm   /* 회원정보에 접속한 일시 */ 
        , NVL(a.loginid,'system') as loginid   /* 회원정보에 접속한 회원id */ 
        , a.LOG_IP as log_ip   /* 회원정보에 접근한 IP */ 
        , a.USER_LOG_CONT as user_log_cont   /* 회원정보에 접속하여 실행한 행위 */ 
        , NVL(a.VIEW_loginid,'system') as view_loginid   /* 열람대상 회원ID */ 
        , TO_CHAR(a.MDFY_DTTM,'YYYY-MM-DD HH24:MI:SS') as mdfy_dttm   /* 로그인하여 수정한 경우 수정일시 */ 
    FROM USER_LOG a /* 사용자로그 */ 
 WHERE 1 = 1
 	<if test="st_dt != null and st_dt != '' ">
 		AND TO_CHAR(a.MDFY_DTTM,'YYYYMMDD') BETWEEN REPLACE(#{st_dt},'-','') AND REPLACE(#{ed_dt},'-','')
 	</if>
 	<if test="user_nm != null and user_nm != '' ">
 		AND a.loginid LIKE '%'||#{user_nm}||'%'
 	</if>
    ORDER BY seq DESC 
  </select>
  
  <!-- 사용자 로그정보  엑셀다운로드용-->
  <select id="selectUserLogMap" resultType="java.util.Map" parameterType="mngUserLogVo">
 SELECT 
          a.SEQ as seq    /* 순번 */ 
        , TO_CHAR(a.LOG_DTTM,'YYYY-MM-DD HH24:MI:SS') as log_dttm   /* 회원정보에 접속한 일시 */ 
        , NVL(a.loginid,'system') as loginid   /* 회원정보에 접속한 회원id */ 
        , a.LOG_IP as log_ip   /* 회원정보에 접근한 IP */ 
        , a.USER_LOG_CONT as user_log_cont   /* 회원정보에 접속하여 실행한 행위 */ 
        , NVL(a.VIEW_loginid,'system') as view_loginid   /* 열람대상 회원ID */ 
        , TO_CHAR(a.MDFY_DTTM,'YYYY-MM-DD HH24:MI:SS') as mdfy_dttm   /* 로그인하여 수정한 경우 수정일시 */ 
    FROM USER_LOG a /* 사용자로그 */ 
 WHERE 1 = 1
 	<if test="st_dt != null and st_dt != '' ">
 		AND TO_CHAR(a.MDFY_DTTM,'YYYYMMDD') BETWEEN REPLACE(#{st_dt},'-','') AND REPLACE(#{ed_dt},'-','')
 	</if>
 	<if test="user_nm != null and user_nm != '' ">
 		AND a.loginid LIKE '%'||#{user_nm}||'%'
 	</if>
    ORDER BY seq DESC 
  </select>
  
  <update id="updateChgPwd" parameterType="ptlLoginVo">
  UPDATE USER_MNG  /* 사용자관리 */ 
	 SET  USER_PWD =  NVL(#{user_pwd, jdbcType=VARCHAR},USER_PWD)   /* 비밀번호*/ 
        , MODIFIY_ID  =   'system'    /* 수정자ID */ 
        , MODIFIY_DTTM =  SYSDATE    /* 수정일자 */ 
 WHERE 1=1 
   AND loginid = #{loginid} 
  </update>
  
    <!-- 사용자 메일정보  -->
  <select id="selectSendEmlExpUserList" resultType="ptlLoginVo" parameterType="String">
 <![CDATA[
	SELECT
	          A.loginid as loginid    /* 사용자ID */ 
	        , A.USER_NM_KOR as user_nm_kor   /* 이름 */ 
	        , A.CLPN1 as clpn1   /* 핸드폰1 */ 
	        , A.CLPN2 as clpn2   /* 핸드폰2 */ 
	        , A.CLPN3 as clpn3   /* 핸드폰3 */ 
	        , A.ETC_CLPN as etc_clpn /*국외번호*/
	        , A.EML as eml   /* 이메일 */ 
	        , EXP_DT 
	        , USER_SN AS user_sn
	        , '[출연연 온라인 채용정보시스템] '|| TO_CHAR(SYSDATE,'MM.dd') ||' 채용서비스 만료 안내' AS mail_subject
            ,  TO_CHAR(TO_DATE(EXP_DT,'YYYY-MM-DD'),'YYYY.MM.dd') || ' 일자로 사용자의 서비스가 <br />만료 되오니 홈페이지에 접속하셔서 [MyPage]에 서비스사용 갱신을 하세요.  '  AS mail_content
	  FROM USER_MNG A
	 WHERE EXP_DT - TO_CHAR(TO_DATE(SYSDATE), 'YYYYMMDD') <= 7
	 ]]>
	 
  </select>
  
</mapper>
