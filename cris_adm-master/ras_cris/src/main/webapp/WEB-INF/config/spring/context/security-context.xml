<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:jee="http://www.springframework.org/schema/jee"
  xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
  http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

  <!-- Spring Security 제외 resource 설정 -->
  <http pattern="/resources/**" security="none"/>
  <http pattern="/error/**" security="none"/>
  <http pattern="/sys/**" security="none"/>

  
  <!-- Spring Security 설정 -->
   <http auto-config='true'  use-expressions="true" > 
   
   	<access-denied-handler error-page="/error/errorout.do" />
   
<!--  access-denied-page="/error/403.do"  -->
    <!-- 로그인 설정 -->
    <form-login login-page="/login/user/login.do"
                username-parameter="loginid"
                password-parameter="password"
                login-processing-url="/login/loginProcess.do"
                authentication-success-handler-ref="loginSuccessHandler"
                authentication-failure-handler-ref="loginFailureHandler"
                always-use-default-target="false" />   

    <!-- 익명 인증  -->
    <anonymous/>

    <!-- 중복 로그인을 방지
    <session-management session-fixation-protection="migrateSession" invalid-session-url="/login/login.do">
      <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" expired-url="/login/logout.do"/>
    </session-management>
     -->

    <!-- 로그아웃 설정 -->
    <logout invalidate-session="true" logout-url="/login/logout.do" logout-success-url="/index/index.do"/>

    <!-- DB 기반 접근제어 설정 -->
    <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor"/> 
  </http>

  <!-- Spring Security 표현식 사용 -->
  <beans:bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

  <!-- Login 수행 메니저 -->
  <authentication-manager>
    <authentication-provider ref="loginAuthenticationProvider" />
  </authentication-manager>

  <!-- Login 수행 -->
  <beans:bean id="loginAuthenticationProvider" class="kr.go.cris.commons.login.provider.LoginAuthenticationProvider" />
  <!-- Login 성공시 호출 -->
  <beans:bean id="loginSuccessHandler" class="kr.go.cris.commons.login.handler.LoginSuccessHandler"/>
  <!-- Login 실패시 호출 -->
  <beans:bean id="loginFailureHandler" class="kr.go.cris.commons.login.handler.LoginFailureHandler"/>

  <!-- DB 기반 접근제어 설정 -->
    <beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
	  <beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager" />
	  <beans:property name="accessDecisionManager" ref="accessDecisionManager" />
	  <beans:property name="securityMetadataSource" ref="databaseSecurityMetadataSource" />
	</beans:bean> 
  <!-- DB 기반 접근 제어를 위한 URL 및 권한 정보를 가지고 있는 Bean -->
	 <beans:bean id="databaseSecurityMetadataSource" class="kr.go.cris.commons.login.intercept.DefaultFilterInvocationSecurityMetadataSource" init-method="init"/>
	<!-- 권한 부여 처리 위임 -->
 	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
    <beans:constructor-arg>
      <beans:list>
        <beans:bean class="org.springframework.security.access.vote.RoleVoter">
          <beans:property name="rolePrefix" value="" />
        </beans:bean>
      </beans:list>
    </beans:constructor-arg>
    <beans:property name="allowIfAllAbstainDecisions" value="false" />
  </beans:bean> 
</beans:beans>
