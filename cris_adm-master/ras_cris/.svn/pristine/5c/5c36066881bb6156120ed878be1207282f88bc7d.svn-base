<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.go.cris.ptl.mng.sch.dao.SchDao">

	<select id="selectEtlList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT ETL_SN as etl_sn 
        	,ETL_ID as etl_id 
        	,ETL_NM as etl_nm 
        	,ETL_TYPE as etl_type 
        	,ETL_TIME as etl_time 
        	,ETL_TB as etl_tb 
        	,ETL_GBN as etl_gbn 
        	,ETL_HH as etl_hh 
        	,ETL_SS as etl_ss 
        	,NEXT_DT as next_dt 
        	,USE_YN as use_yn 
        FROM CMMN_ETL_MNTR       
       WHERE 1=1
           <if test = "strEtlnm != null and strEtlnm != ''">
           		AND ETL_NM LIKE '%'||#{strEtlnm}||'%'
           </if>         
           <if test = "strEtlid != null and strEtlid != ''">
           		AND ETL_ID LIKE '%'||#{strEtlid}||'%'
           </if>         
        order by etl_sn 
	</select>
	
	<select id="selectUseEtlList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT ETL_SN as etl_sn 
        	,ETL_ID as etl_id 
        	,ETL_NM as etl_nm 
        	,ETL_TYPE as etl_type 
        	,ETL_TIME as etl_time 
        	,ETL_TB as etl_tb 
        	,ETL_GBN as etl_gbn 
        	,ETL_HH as etl_hh 
        	,ETL_SS as etl_ss 
        	,NEXT_DT as next_dt 
        	,USE_YN as use_yn 
        FROM CMMN_ETL_MNTR       
       WHERE 1=1
         AND use_yn ='Y'
        order by etl_sn 
	</select>
	<!-- 이력 한달만 조회 -->
	<select id="selectEtlDtlList" parameterType="java.util.Map" resultType="java.util.Map">
		 SELECT 
               ETL_SN as etl_sn     
             , ETL_DTL_SN as etl_dtl_sn       
             , ETL_PRC_DT as etl_prc_dt       
             , TO_CHAR(ETL_CNT,'999,999,999,999') as etl_cnt       
             , ETL_ERR_YN as etl_err_yn       
             , ETL_PRC_YN as etl_prc_yn       
             , PROC_TYPE as proc_type       
          FROM DBO.DW_ETL_DTL_MNTR      
         WHERE 1=1  
           AND ETL_SN = #{strEtlsn}   
           <if test = "strEtldt != null and strEtldt != ''">
           		AND TO_DATE(SUBSTR(ETL_PRC_DT,0,10))  BETWEEN SYSDATE -#{strEtldt} AND SYSDATE
           </if>
           
         ORDER BY etl_dtl_sn desc 
	</select>
	<!-- ETL 마스터 저장 -->
	<insert id="insertEtl" parameterType="hashmap" >
	<![CDATA[ 
		INSERT INTO 
		CMMN_ETL_MNTR 
				(
			 	 ETL_SN
			   , ETL_ID
			   , ETL_TYPE
			   , ETL_TIME
			   , ETL_TB
			   , ETL_HH
			   , ETL_SS
			   , NEXT_DT
			   , USE_YN
			   ,  ETL_NM
			   , ETL_GBN
			   ) 
			VALUES ( 
			(SELECT NVL(MAX(ETL_SN),0) + 1  FROM CMMN_ETL_MNTR ),
			#{etl_id},
			#{etl_type},
			#{etl_time},
			#{etl_tb},
			#{etl_hh},
			#{etl_ss},
			#{next_dt},
			#{use_yn},
			#{etl_nm},
			#{etl_gbn} 
			)
			]]>
	</insert>
	<!-- ETL 마스터 수정 -->
	<update id="updateEtl" parameterType="hashmap" >
	<![CDATA[ 
		UPDATE CMMN_ETL_MNTR
		SET    ETL_ID   = #{etl_id, jdbcType=VARCHAR},
		       ETL_TYPE = #{etl_type, jdbcType=VARCHAR},
		       ETL_TIME = #{etl_time, jdbcType=VARCHAR},
		       ETL_TB   = #{etl_tb, jdbcType=VARCHAR},
		       ETL_HH   = #{etl_hh, jdbcType=VARCHAR},
		       ETL_SS   = #{etl_ss, jdbcType=VARCHAR},
		       NEXT_DT  = #{next_dt, jdbcType=VARCHAR},
		       USE_YN   = #{use_yn, jdbcType=VARCHAR},
		       ETL_NM   = #{etl_nm, jdbcType=VARCHAR},
		       ETL_GBN  = #{etl_gbn, jdbcType=VARCHAR}
		WHERE  ETL_SN   = #{etl_sn}
		]]>
	</update>
	<!-- ETL 상세 삭제  -->
	<delete id="deleteEtlDtl" parameterType="hashmap" >
		DELETE FROM
		       DBO.DW_ETL_DTL_MNTR 
		 WHERE ETL_SN =#{etl_sn}
	</delete>
	<!--  ETL 마스터 삭제-->
	<delete id="deleteEtl" parameterType="hashmap" >
		DELETE FROM
		       CMMN_ETL_MNTR 
		 WHERE ETL_SN =#{etl_sn}	
	</delete>
	<!--  스켸줄실행 건 조회-->
	<select id="selectProcEtl" resultType="java.util.Map">
	SELECT  a.* 
	     ,  SUBSTR(REPLACE(NEXT_DT,'/','-'),0,10) AS ETL_DT
      FROM CMMN_ETL_MNTR a
     WHERE NEXT_DT BETWEEN TO_CHAR(SYSDATE - 5/(24*60), 'yyyy/MM/dd HH24:MI') 
       AND TO_CHAR(SYSDATE, 'yyyy/MM/dd HH24:MI') 
       AND use_yn = 'Y'
	</select> 
	
	<!-- ETL 다음 실행일시 수정 -->
	<update id="updateNextDt" parameterType="hashmap" >
		UPDATE
              CMMN_ETL_MNTR 
           SET NEXT_DT = #{next_dt}  
         WHERE 1=1 
           AND ETL_SN = #{etl_sn} 
	</update>
	<!-- 화면관리 조회 -->
	<select id="selectScList" parameterType="java.util.Map" resultType="java.util.Map">
	  SELECT 
			S.SC_ID as  sc_id
		  , S.DSBD_ID as dsbd_id
		  , S.PAGE_ID as page_id
		  , S.PROP_ID as prop_id
		  , S.ETC as etc
	   FROM DBO.DW_SC_MNG S
	  WHERE 1=1
       <if test = "page_id != null and page_id != ''">
       		AND S.PAGE_ID = #{page_id}
       </if>
       <if test = "sc_id != null and sc_id != ''">
       		AND S.SC_ID = #{sc_id}
       </if>
         ORDER BY dsbd_id,page_id ASC
	</select>
	
	<!-- 화면관리 저장 -->
	<insert id="insertScList" parameterType="hashmap" >
	INSERT INTO 
	   DBO.DW_SC_MNG (SC_ID,
                   DSBD_ID,
                   PAGE_ID,
                   PROP_ID,
                   ETC)
          VALUES ( 
                  #{SC_ID}
                , #{DSBD_ID}
                , #{PAGE_ID}
                , #{PROP_ID}
                , #{ETC}
                 )
	</insert>
	<!-- 화면관리 수정 -->
	<update id="updateScList" parameterType="hashmap" >
		UPDATE DBO.DW_SC_MNG
		SET    DSBD_ID = #{DSBD_ID},
		       PAGE_ID = #{PAGE_ID},
		       PROP_ID = #{PROP_ID},
		       ETC     = #{ETC}
		WHERE  SC_ID   = #{SC_ID}
	</update>
	<!-- 화면관리 삭제 -->
	<update id="deleteScList" parameterType="hashmap" >
		DELETE FROM
		       DBO.DW_SC_MNG 
		 WHERE SC_ID   = #{SC_ID}
	</update>
	
	<!-- ETL건수 수정목록 조회 -->
	<select id="selectEtlUpdList" parameterType="java.util.Map" resultType="java.util.Map">
	   SELECT DISTINCT B.ETL_SN 
    	    , A.ETL_TB
    	    , A.ETL_GBN 
    	    , B.ETL_PRC_DT
    	 FROM CMMN_ETL_MNTR A
    	    , DBO.DW_ETL_DTL_MNTR B
    	 WHERE A.ETL_SN = B.ETL_SN
    	  AND B.ETL_PRC_YN ='N'
    	  AND B.ETL_ERR_YN ='N'
    	  AND A.ETL_ID = #{ETL_ID}
	</select>
	<!-- ETL 건수 업데이트-->
	<update id="updateEtlCnt" parameterType="hashmap" >
	<![CDATA[ 
           UPDATE 
                 DBO.DW_ETL_DTL_MNTR 
	             SET 
	                   ETL_CNT = 
		    	               ( SELECT COUNT(*) 
		    	                   FROM ${etl_tb} 
		                     )
		             , ETL_PRC_YN = 'Y'   
		         WHERE 1=1 
	               AND ETL_SN = #{etl_sn}
	               AND ETL_PRC_YN  = 'N' 
	         ]]>
	</update>
	
	
	<insert id="insertEtlDtl" parameterType="hashmap" >
	<![CDATA[ 
		 INSERT INTO DBO.DW_ETL_DTL_MNTR ( 
		   ETL_SN 
		 , ETL_DTL_SN 
		 , ETL_PRC_DT 
		 , ETL_CNT 
		 , ETL_ERR_YN 
		 , ETL_PRC_YN 
		 , PROC_TYPE 
		 ) 
		 VALUES 
		 ( 
		  #{ETL_SN} 
		 ,(SELECT NVL(MAX(ETL_DTL_SN),0) + 1 FROM DBO.DW_ETL_DTL_MNTR WHERE ETL_SN = #{ETL_SN})  
		 ,TO_CHAR(SYSDATE , 'yyyy/MM/dd HH24:MI')
		 ,NVL(#{ETL_CNT},0) 
		 ,NVL(#{ETL_ERR_YN},'N') 		
		 ,NVL(#{ETL_PRC_YN},'N') 				
		 ,#{PROC_TYPE} 	   
		 )
		  ]]>
	</insert>
	
	<select id="selectSpList" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT SP_ID
		          , SP_USER
		          , SP_PWD
		      FROM DBO.DW_SP_MNG A
		     WHERE 1=1
        <if test = "PROP_ID != null and PROP_ID != ''">
       		AND A.SP_ID = #{PROP_ID}
       </if>
            ORDER BY 1
	</select>
	
	
	
	
	<!-- lcc 부재별 유지관리 소요예산 정보 조회 -->
	<select id="selectLccAmtList" parameterType="java.util.Map" resultType="java.util.Map">
  SELECT a.STNDD_YYYY$ AS STNDD_YYYY
          , TO_CHAR(SUM (CASE WHEN a.ASMT_CD$ = '01' THEN b.BB01_CNSTN_AMT$ ELSE 0 END )/1000,'999,999,999,999,999') AS  CNSTN1_AMT
          , TO_CHAR(SUM (CASE WHEN a.ASMT_CD$ = '05' THEN b.BB01_CNSTN_AMT$ ELSE 0 END )/1000,'999,999,999,999,999') AS  CNSTN5_AMT
          , TO_CHAR(SUM (CASE WHEN a.ASMT_CD$ = '07' THEN b.BB01_CNSTN_AMT$ ELSE 0 END )/1000,'999,999,999,999,999') AS  CNSTN7_AMT
          , TO_CHAR( SUM (CASE WHEN a.ASMT_CD$ = '06' THEN b.BB01_CNSTN_AMT$ ELSE 0 END )/1000,'999,999,999,999,999') AS  CNSTN6_AMT
          , TO_CHAR(SUM (CASE WHEN a.ASMT_CD$ = '03' THEN b.BB01_CNSTN_AMT$ ELSE 0 END )/1000,'999,999,999,999,999') AS  CNSTN3_AMT
          , TO_CHAR(SUM (CASE WHEN a.ASMT_CD$ = '02' THEN b.BB01_CNSTN_AMT$ ELSE 0 END )/1000,'999,999,999,999,999') AS  CNSTN2_AMT
          , TO_CHAR(SUM (CASE WHEN a.ASMT_CD$ = '99' THEN b.BB01_CNSTN_AMT$ ELSE 0 END )/1000,'999,999,999,999,999') AS  CNSTN99_AMT
          , MAX(SNOW_DIPT_NM$) AS SNOW_DIPT_NM
          , MAX(RNFL_DIPT_NM$) AS RNFL_DIPT_NM
          , MAX(TRFV_DIPT_NM$) AS TRFV_DIPT_NM
    FROM    S_N20170808152343639517_09.DW_SF_DAY_M_LCC_BB01 b
         INNER JOIN
            S_N20170808152343639517_09.DW_DM_X8353450EF6CF042171B9EB a
         ON b.X42D2A562117D0861CE87146BC =
               a.M_LCC_BB0126534160$
   WHERE 1 = 1
     AND a.STNDD_YYYY$ =#{stnddYyyy}
     	     <if test = "hdqrCd != null and hdqrCd != ''">
       			AND a.HDQR_NM$ = #{hdqrCd}
      		 </if>
	         <if test = "mtnofCd != null and mtnofCd != ''">
       			AND a.MTNOF_NM$ = #{mtnofCd}
      		 </if>
	         <if test = "brdgNm != null and brdgNm != ''">
       			AND a.BRDG_NM$ = #{brdgNm}
      		 </if>
GROUP BY a.STNDD_YYYY$
ORDER BY a.STNDD_YYYY$ ASC
	      
	</select>
	
	<!-- 교통량 정보 조회 -->
	<select id="selectBdsDataList" parameterType="java.util.Map" resultType="java.util.Map">
SELECT b.TOTL_DATES$ AS TOTL_DATES,
         b.TOTL_YEAR$ AS TOTL_YEAR,
         b.TOTL_MONTH$ ASTOTL_MONTH,
         b.ROUTE_NM$ AS ROUTE_NM,
         b.SMAL_SCTNM$ AS SMAL_SCTNM,
         b.STPT_EDPNT_DRCT_CLSS_CD$ AS STPT_EDPNT_DRCT_CLSS_CD,
         b.ROUTE_CD$ AS ROUTE_CD,
         b.SMAL_SECT_NO$ AS SMAL_SECT_NO,
         MIN(MTNOF_STPNT_DSTNC$) AS MTNOF_STPNT_DSTNC,
         MAX(MTNOF_EDPNT_DSTNC$) AS MTNOF_EDPNT_DSTNC,
         SUM (a.TRFV$) AS TOT_TRFV,
         SUM (a.TRFV01$) AS TRFV_01,
         SUM (a.TRFV02$) AS TRFV_02,
         SUM (a.TRFV03$) AS TRFV_03,
         SUM (a.TRFV04$) AS TRFV_04,
         SUM (a.TRFV05$) AS TRFV_05,
         SUM (a.TRFV06$) AS TRFV_06,
         SUM (a.TRFV07$) AS TRFV_07,
         SUM (a.TRFV08$) AS TRFV_08,
         SUM (a.TRFV09$) AS TRFV_09,
         SUM (a.TRFV10$) AS TRFV_10,
         SUM (a.TRFV11$) AS TRFV_11,
         SUM (a.TRFV12$) AS TRFV_12,
         SUM (a.TRFV13$) AS TRFV_13
    FROM    S_N20170718095321847322_09.DW_SF_DAY_M_TRFV01 a
         INNER JOIN
            S_N20170718095321847322_09.DW_DM_M_TRFV01_M_TRFV01 b
         ON a.E1AD00BEFB0605968760DC2596 = b.M_TRFV01_196208093$
   WHERE b.TOTL_DATES$ = #{TOTL_DATES}
GROUP BY b.TOTL_DATES$,
         b.TOTL_YEAR$,
         b.TOTL_MONTH$,
         b.ROUTE_NM$,
         b.SMAL_SCTNM$,
         b.STPT_EDPNT_DRCT_CLSS_CD$,
         b.ROUTE_CD$,
         b.SMAL_SECT_NO$
ORDER BY SMAL_SCTNM
	</select>
	<!-- 터널 조회 -->
	<select id="selectTerRtList"  resultType="java.util.Map">
	  SELECT b.ELPW_COST_MSRM_YEAR$ AS TER_YYYY,
	         b.ELPW_COST_MSRM_YYMM$ AS TER_YYYYMM,
	         ROUND(AVG (a.ELPW_USMN_RT$),2) AS RATE
	    FROM    S_N20170714133403399291_09.DW_SF_DAY_M_TER_01 a
	         INNER JOIN
	            S_N20170714133403399291_09.DW_DM_M_TER_01_M_TER_01 b
	         ON a.X23807C8B6203FC0E88AD1D5B4 = b.M_TER_01142350895$
	   WHERE ( b.ELPW_COST_MSRM_YYMM$ BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-13),'YYYYMM' ) AND  TO_CHAR(ADD_MONTHS(SYSDATE,-2),'YYYYMM' )
	        AND b.DATA_EX_YN$ = 'N')
	GROUP BY b.ELPW_COST_MSRM_YEAR$, b.ELPW_COST_MSRM_YYMM$
	ORDER BY b.ELPW_COST_MSRM_YYMM$ ASC
	</select>
	
	<!-- 교통량/기상 정보 조회 교량 -->
	<select id="searchMapBInfo"  resultType="java.util.Map" parameterType="java.util.Map">
	SELECT *
	   FROM
	   (
        SELECT T101.STNDD_YYYY$            AS stndd_yyyy           /* 기준년도 */
              ,T101.HDQR_NM$               AS hdqr_nm              /* 본부명 */
              ,T101.MTNOF_NM$              AS mtnof_nm             /* 지사명 */
              ,T101.ROUTE_NM$              AS route_nm             /* 노선명 */
              ,T101.BRDG_NM$               AS brdg_nm              /* 교량명 */
              ,T101.ENVR_FCTR_NM$          AS envr_fctr_nm         /* 환경인자구분명 */
              ,T101.DIPT_NM$               AS dipt_nm              /* 중요도명 */
              ,T101.GGTM_XCORD$            AS gps_lgtd             /* 공간정보GPS경도 */
              ,T101.GGTM_YCORD$            AS gps_lttd             /* 공간정보GPS위도 */
              ,T101.HDQR_CD$               AS hdqr_cd              /* 본부코드 */
              ,T101.ROUTE_CD$              AS route_cd             /* 노선코드 */
              ,T101.MTNOF_CD$              AS mtnof_cd             /* 지사코드 */
              ,T101.ENVR_FCTR_CD$          AS envr_fctr_cd         /* 환경인자구분코드 */
              ,T101.DIPT_CD$               AS dipt_cd              /* 중요도코드 */
              ,T101.PROS_DATES$            AS pros_dates           /* 처리일자 */
              ,T102.BA02_ENVR_FCTR_AMNT$   AS ba02_envr_fctr_amnt  /*  환경인자량 */
              , ROW_NUMBER() OVER(PARTITION BY T101.BRDG_NM$ ORDER BY CASE WHEN T102.BA02_ENVR_FCTR_AMNT$ > 0 THEN 2 WHEN  T102.BA02_ENVR_FCTR_AMNT$ = 0 AND  T101.DIPT_CD$ IN ('03') THEN 1 ELSE 0 END DESC)AS ORD_SN
        FROM S_N20170808152343639517_09.DW_DM_X282E8B0874E1D7339D1C6B T101
        INNER JOIN S_N20170808152343639517_09.DW_SF_DAY_M_LCC_BA02 T102
        ON  T101.KEY$=T102.M_LCC_BA02$KEY$
          WHERE 1=1
             AND T101.STNDD_YYYY$  =#{str_year}
             AND T101.GPS_LGTD$ IS NOT NULL 
             AND T101.GPS_LTTD$ IS NOT NULL
             AND T101.GPS_LGTD$ != -999
             AND T101.GPS_LTTD$ != -999
            /* AND (T102.BA02_ENVR_FCTR_AMNT$ > 0  OR ( T102.BA02_ENVR_FCTR_AMNT$ = 0 AND  T101.DIPT_CD$ IN ('03'))  )     */
            <if test = "str_hdqr != null and str_hdqr != ''">
                 AND T101.HDQR_NM$ = #{str_hdqr}
            </if>
            <if test = "str_mtnof != null and str_mtnof != ''">
                 AND T101.MTNOF_NM$ = #{str_mtnof}
            </if>
             AND T101.ENVR_FCTR_NM$ = (CASE WHEN #{envr_fctr_gbn} = '03' THEN '교통량'
             							   WHEN #{envr_fctr_gbn} = '01' THEN '강설량'
             							   WHEN #{envr_fctr_gbn} = '02' THEN '강우량' END)
            <if test = "dipt_gbn != null and dipt_gbn != ''">
             AND T101.DIPT_NM$= (CASE WHEN #{dipt_gbn} = '01' THEN '상'
          							  WHEN #{dipt_gbn} = '02' THEN '중'
          							  WHEN #{dipt_gbn} = '03' THEN '하' END)
            </if>
	    )
	 WHERE ORD_SN =1
	</select>
	
	<!--  터널 맵정보 조회-->
	<select id="searchMapTInfo"  resultType="java.util.Map" parameterType="java.util.Map">
   SELECT DISTINCT TUNL_NM$ AS tunl_nm
                 , GGTM_XCORD$ AS gps_lgtd
                 , GGTM_YCORD$ AS gps_lttd
                 , EXTNS_LNGT$ AS extns_lngt
                 , TUNL_LNGT_CLSS_NM$ AS tunl_lngt_clss_nm
		    FROM    S_N20170808152343639517_09.DW_SF_DAY_M_LCC_T01 a
		         INNER JOIN
		            S_N20170808152343639517_09.DW_DM_E994AF6D7E18BA51F23DD39 b
		         ON a.E7D8E2987C093F08D6CFF4CE87 = b.M_LCC_T011591193129$
		   WHERE 1 = 1
		  	  AND b.STNDD_YYYY$  = #{str_year} 
		      AND GGTM_XCORD$ IS NOT NULL
		      AND GGTM_YCORD$ IS NOT NULL
		      AND GGTM_XCORD$ !=  99999
		      AND GGTM_YCORD$ !=  99999
		      AND GGTM_XCORD$ !=   -999
		      AND GGTM_YCORD$ !=   -999
            <if test = "str_hdqr != null and str_hdqr != ''">
                 AND b.HDQR_NM$ = #{str_hdqr}
            </if>
            <if test = "str_mtnof != null and str_mtnof != ''">
                 AND b.MTNOF_NM$ = #{str_mtnof}
            </if>
            <if test = "tunl_lngt_clss_nm != null and tunl_lngt_clss_nm != ''">
             AND b.TUNL_LNGT_CLSS_NM$= (CASE WHEN #{tunl_lngt_clss_nm} = '01' THEN '장터널'
          							         WHEN #{tunl_lngt_clss_nm} = '02' THEN '중터널'
          							         WHEN #{tunl_lngt_clss_nm} = '03' THEN '단터널' END)
            </if>
	</select>
	
		<!-- 교통량/기상 정보 조회 포장 -->
	<select id="searchMapPInfo"  resultType="java.util.Map" parameterType="java.util.Map">
  SELECT b.STPNT_IC_NM$ AS STPNT_IC_NM,
         b.EDPNT_IC_NM$ AS EDPNT_IC_NM,
         b.GPS_LTTD$ AS GPS_LTTD,
         b.GPS_LGTD$ AS GPS_LGTD,
         b.DIPT_NM$ AS DIPT_NM,
         b.ENVR_FCTR_NM$ AS ENVR_FCTR_NM,
         b.MTNOF_STPNT_DSTNC$ AS MTNOF_STPNT_DSTNC,
         b.MTNOF_EDPNT_DSTNC$ AS MTNOF_EDPNT_DSTNC,
         b.DIPT_CD$ AS DIPT_CD,
         b.ROUTE_NM$ AS ROUTE_NM,
         SUM (a.P02_ENVR_FCTR_AMNT$) AS ENVR_FCTR_AMNT
    FROM    S_N20170808152343639517_09.DW_SF_DAY_M_LCC_P02 a
         INNER JOIN
            S_N20170808152343639517_09.DW_DM_B60AEE46F801211449C091A b
         ON a.X52A0EAAE43997881F0920E684 = b.M_LCC_P02_378175336$
  WHERE 1=1
    AND b.STNDD_YYYY$  =#{str_year}
    AND b.GPS_LGTD$ IS NOT NULL 
    AND b.GPS_LTTD$ IS NOT NULL
    AND b.GPS_LGTD$ != -999
    AND b.GPS_LTTD$ != -999
        <if test = "str_hdqr != null and str_hdqr != ''">
           AND b.HDQR_NM$ = #{str_hdqr}
        </if>
        <if test = "str_mtnof != null and str_mtnof != ''">
           AND b.MTNOF_NM$ = #{str_mtnof}
        </if>
           AND b.ENVR_FCTR_NM$ = (CASE WHEN #{envr_fctr_gbn} = '03' THEN '교통량'
             							   WHEN #{envr_fctr_gbn} = '01' THEN '강설량'
             							   WHEN #{envr_fctr_gbn} = '02' THEN '강우량' END)
            <if test = "dipt_gbn != null and dipt_gbn != ''">
             AND b.DIPT_NM$ = (CASE WHEN #{dipt_gbn} = '01' THEN '상'
          							  WHEN #{dipt_gbn} = '02' THEN '중'
          							  WHEN #{dipt_gbn} = '03' THEN '하' END)
            </if>
GROUP BY b.STPNT_IC_NM$,
         b.EDPNT_IC_NM$,
         b.GPS_LTTD$,
         b.GPS_LGTD$,
         b.DIPT_CD$,
         b.DIPT_NM$,
         b.ENVR_FCTR_NM$,
         b.MTNOF_STPNT_DSTNC$,
         b.MTNOF_EDPNT_DSTNC$,
         b.ROUTE_NM$
	</select>
	
		<!-- 교통량/기상 정보 조회 사면 -->
	<select id="searchMapSInfo"  resultType="java.util.Map" parameterType="java.util.Map">
    SELECT b.ROUTE_NM$ AS ROUTE_NM
         , b.GPS_LTTD$ AS GPS_LTTD
         , b.GPS_LGTD$ AS GPS_LGTD
         , b.ENVR_FCTR_NM$ AS ENVR_FCTR_NM
         , b.DIPT_NM$ AS DIPT_NM
         , b.DIPT_CD$ AS DIPT_CD
         , SUM (a.S03_SLP_CNT1$) AS SLP_CNT
    FROM    S_N20170808152343639517_09.DW_SF_DAY_M_LCC_S03 a
         INNER JOIN
            S_N20170808152343639517_09.DW_DM_BBA3396CF31F2978F1FC173 b
         ON a.B80627B29B68415D0E8AA5CFC3 =
               b.M_LCC_S031187908604$
 WHERE 1=1
     AND b.STNDD_YYYY$  =#{str_year}
      AND b.GPS_LGTD$ IS NOT NULL 
      AND b.GPS_LTTD$ IS NOT NULL
      AND b.GPS_LGTD$ != -999
      AND b.GPS_LTTD$ != -999
        <if test = "str_hdqr != null and str_hdqr != ''">
           AND b.HDQR_NM$ = #{str_hdqr}
        </if>
        <if test = "str_mtnof != null and str_mtnof != ''">
           AND b.MTNOF_NM$ = #{str_mtnof}
        </if>
           AND b.ENVR_FCTR_NM$ = (CASE WHEN #{envr_fctr_gbn} = '03' THEN '교통량'
             							   WHEN #{envr_fctr_gbn} = '01' THEN '강설량'
             							   WHEN #{envr_fctr_gbn} = '02' THEN '강우량' END)
            <if test = "dipt_gbn != null and dipt_gbn != ''">
             AND b.DIPT_NM$ = (CASE WHEN #{dipt_gbn} = '01' THEN '상'
                                        WHEN #{dipt_gbn} = '02' THEN '중'
                                        WHEN #{dipt_gbn} = '03' THEN '하' END)
            </if>
GROUP BY b.GPS_LTTD$,
         b.GPS_LGTD$,
         b.ENVR_FCTR_NM$,
         b.DIPT_NM$,
         b.DIPT_CD$,
         b.ROUTE_NM$
	</select>
	
	
	<!-- Lcc 부재별 보수금액/ 건수 -->
	<select id="selectRadialChart"  resultType="java.util.Map" parameterType="java.util.Map">
WITH  LCC_TB AS  (
SELECT   ASMT_CD$ AS ASMT_CD
       , MAX(ASMT_NM$) AS ASMT_NM 
       , SUM(BB01_RPRM_CNT$) AS CNT
       , CASE WHEN SUM(BB01_RPRM_CNT$) =0 THEN 0 ELSE ROUND(SUM(BB01_CNSTN_AMT$) / MAX(T103.SUM_AMT) * 100)  END AS RAT
       ,  CASE WHEN ASMT_CD$ = '01' THEN 'rgba(230,230,230,1)'      /* 교면포장*/
                 WHEN ASMT_CD$ = '05' THEN 'rgba(230,230,230,1)'    /* 신축이음*/  
                 WHEN ASMT_CD$ = '07' THEN 'rgba(230,230,230,1)'    /* 하부구조*/ 
                 WHEN ASMT_CD$ = '06' THEN 'rgba(230,230,230,1)'     /* 교량받침*/
                 WHEN ASMT_CD$ = '03' THEN 'rgba(230,230,230,1)'     /* 거더*/
                 WHEN ASMT_CD$ = '02' THEN 'rgba(230,230,230,1)'     /* 바닥판*/
                 WHEN ASMT_CD$ = '99' THEN 'rgba(230,230,230,1)'     /* 기타*/
         END AS RGBA
  FROM S_N20170808152343639517_09.DW_DM_X8353450EF6CF042171B9EB T101
         , S_N20170808152343639517_09.DW_SF_DAY_M_LCC_BB01 T102
         ,  (SELECT SUM(BB01_CNSTN_AMT$) AS SUM_AMT
                FROM S_N20170808152343639517_09.DW_DM_X8353450EF6CF042171B9EB a
                      , S_N20170808152343639517_09.DW_SF_DAY_M_LCC_BB01 b
              WHERE  a.KEY$=b.M_LCC_BB01$KEY$
                AND ASMT_CD$ IN ('01','05','07','06','03','02','99')
                AND a.STNDD_YYYY$  =#{str_year}
		            <if test = "str_hdqr != null and str_hdqr != ''">
		                 AND a.HDQR_NM$ = #{str_hdqr}
		            </if>
		            <if test = "str_mtnof != null and str_mtnof != ''">
		                 AND a.MTNOF_NM$ =  #{str_mtnof}
		            </if>
		            <if test = "str_brdg_nm != null and str_brdg_nm != ''">
		             AND a.BRDG_NM$ = #{str_brdg_nm} 
		            </if>  
                  )  T103
 	WHERE  T101.KEY$=T102.M_LCC_BB01$KEY$
 	 AND ASMT_CD$ IN ('01','05','07','06','03','02','99')
    AND T101.STNDD_YYYY$  =#{str_year}
            <if test = "str_hdqr != null and str_hdqr != ''">
                 AND T101.HDQR_NM$ = #{str_hdqr}
            </if>
            <if test = "str_mtnof != null and str_mtnof != ''">
                 AND T101.MTNOF_NM$ =  #{str_mtnof}
            </if>
            <if test = "str_brdg_nm != null and str_brdg_nm != ''">
             AND T101.BRDG_NM$ = #{str_brdg_nm} 
            </if>
 GROUP BY ASMT_CD$
 ) 
      SELECT A.ASMT_NM AS ASMT_NM
           , NVL(B.CNT,0) AS CNT 
           , NVL(B.RAT,0) AS RAT
          ,  CASE WHEN A.ASMT_CD = '01' THEN 'rgba(230,230,230,1)'      /* 교면포장*/
                 WHEN A.ASMT_CD = '05' THEN 'rgba(230,230,230,1)'    /* 신축이음*/  
                 WHEN A.ASMT_CD = '07' THEN 'rgba(230,230,230,1)'    /* 하부구조*/ 
                 WHEN A.ASMT_CD = '06' THEN 'rgba(230,230,230,1)'     /* 교량받침*/
                 WHEN A.ASMT_CD = '03' THEN 'rgba(230,230,230,1)'     /* 거더*/
                 WHEN A.ASMT_CD = '02' THEN 'rgba(230,230,230,1)'     /* 바닥판*/
                 WHEN A.ASMT_CD = '99' THEN 'rgba(230,230,230,1)'     /* 기타*/
         END AS RGBA
          ,  CASE WHEN A.ASMT_CD = '01' THEN 1      /* 교면포장*/
                  WHEN A.ASMT_CD = '05' THEN 2    /* 신축이음*/  
                  WHEN A.ASMT_CD = '07' THEN 3    /* 하부구조*/ 
                  WHEN A.ASMT_CD = '06' THEN 4     /* 교량받침*/
                  WHEN A.ASMT_CD = '03' THEN 5     /* 거더*/
                  WHEN A.ASMT_CD = '02' THEN 6     /* 바닥판*/
                  WHEN A.ASMT_CD = '99' THEN 7     /* 기타*/
         END AS ORDER_COL
   FROM (SELECT DISTINCT ASMT_CD$ AS ASMT_CD , ASMT_NM$ AS ASMT_NM 
                FROM S_N20170808152343639517_09.DW_DM_X8353450EF6CF042171B9EB a
          WHERE ASMT_CD$ IN ('01','05','07','06','03','02','99')
                ) A
           , LCC_TB B
  WHERE 1 = 1
    AND A.ASMT_CD = B.ASMT_CD(+)
 ORDER BY CASE WHEN A.ASMT_CD = '01' THEN 1      
               WHEN A.ASMT_CD = '05' THEN 2    
               WHEN A.ASMT_CD = '07' THEN 3    
               WHEN A.ASMT_CD = '06' THEN 4    
               WHEN A.ASMT_CD = '03' THEN 5    
               WHEN A.ASMT_CD = '02' THEN 6    
               WHEN A.ASMT_CD = '99' THEN 7    
         END
	</select>
	
	<!-- 관리교량수 -->
	<select id="selectMngBrdgCnt"  resultType="java.util.Map" parameterType="java.util.Map">
		SELECT SUM(T102.BA01_BRDG_CNT$) AS BRDG_CNT /* 교량수 */
 	         , SUM(CASE WHEN DIPT_NM$  ='상' THEN BA01_BRDG_CNT$ ELSE 0 END) AS DIPT_01_CNT
	         , SUM(CASE WHEN DIPT_NM$  ='중' THEN BA01_BRDG_CNT$ ELSE 0 END) AS DIPT_02_CNT
	         , SUM(CASE WHEN DIPT_NM$  ='하' THEN BA01_BRDG_CNT$ ELSE 0 END) AS DIPT_03_CNT
	FROM S_N20170808152343639517_09.DW_DM_X2DF48EA70C49381B7F7756 T101
	INNER JOIN S_N20170808152343639517_09.DW_SF_DAY_M_LCC_BA01 T102
	ON  T101.KEY$=T102.M_LCC_BA01$KEY$
	WHERE T101.ENVR_FCTR_CD$=#{envr_fctr_gbn}
	 AND T101.STNDD_YYYY$  =#{stnddYyyy}
         <if test = "hdqrCd != null and hdqrCd != ''">
              AND T101.HDQR_NM$ = #{hdqrCd}
         </if>
         <if test = "mtnofCd != null and mtnofCd != ''">
              AND T101.MTNOF_NM$ =  #{mtnofCd}
         </if>
	</select>
	
	<!-- 관리터널수 -->
	<select id="selectMngTurnCnt"  resultType="java.util.Map" parameterType="java.util.Map">
      SELECT  COUNT(DISTINCT FCLTS_INTG_ID$) AS TUNL_CNT /* 터널수 */
            , COUNT(DISTINCT CASE WHEN TUNL_LNGT_CLSS_NM$  ='장터널' THEN FCLTS_INTG_ID$ END) AS DIPT_01_CNT
            , COUNT(DISTINCT CASE WHEN TUNL_LNGT_CLSS_NM$  ='중터널' THEN FCLTS_INTG_ID$ END) AS DIPT_02_CNT
            , COUNT(DISTINCT CASE WHEN TUNL_LNGT_CLSS_NM$  ='단터널' THEN FCLTS_INTG_ID$ END) AS DIPT_03_CNT
    FROM    S_N20170808152343639517_09.DW_SF_DAY_M_LCC_T01 a
         INNER JOIN
            S_N20170808152343639517_09.DW_DM_E994AF6D7E18BA51F23DD39 b
         ON a.E7D8E2987C093F08D6CFF4CE87 = b.M_LCC_T011591193129$
   WHERE 1 = 1
	  AND b.STNDD_YYYY$  = #{stnddYyyy} 
         <if test = "hdqrCd != null and hdqrCd != ''">
              AND b.HDQR_NM$ = #{hdqrCd}
         </if>
         <if test = "mtnofCd != null and mtnofCd != ''">
              AND b.MTNOF_NM$ =  #{mtnofCd}
         </if>
	</select>
	
		<!-- 관리구간수 -->
	<select id="selectMngPavCnt"  resultType="java.util.Map" parameterType="java.util.Map">
        SELECT COUNT(*) AS PAV_CNT /* 구간수 */
              , SUM(CASE WHEN DIPT_NM$  ='상' THEN 1 ELSE 0 END) AS DIPT_01_CNT
              ,  SUM(CASE WHEN DIPT_NM$  ='중' THEN 1 ELSE 0 END) AS DIPT_02_CNT
              , SUM(CASE WHEN DIPT_NM$  ='하' THEN 1 ELSE 0 END) AS DIPT_03_CNT
    FROM    S_N20170808152343639517_09.DW_SF_DAY_M_LCC_P02 a
         INNER JOIN
            S_N20170808152343639517_09.DW_DM_B60AEE46F801211449C091A b
         ON a.X52A0EAAE43997881F0920E684 = b.M_LCC_P02_378175336$
	WHERE b.ENVR_FCTR_CD$=#{envr_fctr_gbn}
	 AND b.STNDD_YYYY$  =#{stnddYyyy}
         <if test = "hdqrCd != null and hdqrCd != ''">
              AND b.HDQR_NM$ = #{hdqrCd}
         </if>
         <if test = "mtnofCd != null and mtnofCd != ''">
              AND b.MTNOF_NM$ =  #{mtnofCd}
         </if>
	</select>
	
	
	<!-- 관리사면수 -->
	<select id="selectMngSmCnt"  resultType="java.util.Map" parameterType="java.util.Map">
	     SELECT NVL(SUM(SLP_CNT$),0) AS SLP_CNT		/* 관리사면수*/
	          , NVL(SUM(CASE WHEN DIPT_NM$  ='상' THEN SLP_CNT$ ELSE 0 END),0) AS DIPT_01_CNT
	          , NVL(SUM(CASE WHEN DIPT_NM$  ='중' THEN SLP_CNT$ ELSE 0 END),0) AS DIPT_02_CNT
	          , NVL(SUM(CASE WHEN DIPT_NM$  ='하' THEN SLP_CNT$ ELSE 0 END),0) AS DIPT_03_CNT
	    FROM    S_N20170808152343639517_09.DW_SF_DAY_M_LCC_S03 a
	         INNER JOIN
	            S_N20170808152343639517_09.DW_DM_BBA3396CF31F2978F1FC173 b
	         ON a.B80627B29B68415D0E8AA5CFC3 = b.M_LCC_S031187908604$
	 WHERE 1=1
	   AND ENVR_FCTR_CD$ = #{envr_fctr_gbn}
      /* AND  (a.S03_ENVR_FCTR_AMNT$ > 0  OR ( a.S03_ENVR_FCTR_AMNT$ = 0 AND  b.DIPT_CD$ IN ('03'))  ) */
	 AND b.STNDD_YYYY$  =#{stnddYyyy}
         <if test = "hdqrCd != null and hdqrCd != ''">
              AND b.HDQR_NM$ = #{hdqrCd}
         </if>
         <if test = "mtnofCd != null and mtnofCd != ''">
              AND b.MTNOF_NM$ =  #{mtnofCd}
         </if>
	</select>
	
	<!-- LCC 년도별 소요예산 교량 -->
 	<select id="selectYearBrdgAmtList"  resultType="java.util.Map" parameterType="java.util.Map">
	  SELECT  FCLTS_INTG_ID$ AS FCLTS_INTG_ID
            , MAX(b.BRDG_NM$) as BRDG_NM
	        , MAX(b.CMCN_YEAR$) AS CMCN_YEAR
	        , MAX(b.PBUS_YYNU$) AS PBUS_YYNU
	        , MAX(b.RNFL_DIPT_NM$) AS RNFL_DIPT_NM
	        , MAX(b.SNOW_DIPT_NM$) AS SNOW_DIPT_NM
	        , MAX(b.TRFV_DIPT_NM$) AS TRFV_DIPT_NM
	        , TO_CHAR(NVL(SUM(a.BA03_CNSTN_AMT$),0)/1000,'999,999,999,999,999') as YEAR_RPRM_AMT
	        , TO_CHAR(NVL(MAX(a.BA03_BT_CNSTN_AMT$),0)/1000,'999,999,999,999,999') as ACML_RPRM_AMT
	    FROM    S_N20170808152343639517_09.DW_SF_DAY_M_LCC_BA03 a
	         INNER JOIN
	            S_N20170808152343639517_09.DW_DM_FB69B20A16EFB64C0C6102E b
	         ON a.X96CB30EC9DDED3ABCDC43555F = b.M_LCC_BA03_1929912048$
	   WHERE 1 = 1
             AND b.STNDD_YYYY$ =#{stnddYyyy}
         <if test = "hdqrCd != null and hdqrCd != ''">
              AND b.HDQR_NM$ = #{hdqrCd}
         </if>
         <if test = "mtnofCd != null and mtnofCd != ''">
              AND b.MTNOF_NM$ =  #{mtnofCd}
         </if>
         GROUP BY FCLTS_INTG_ID$
         ORDER by  MAX(b.BRDG_NM$)
	</select> 

	<!-- LCC 년도별 소요예산 터널 -->
 	<select id="selectYearTurnAmtList"  resultType="java.util.Map" parameterType="java.util.Map">
  SELECT b.TUNL_NM$ AS TUNL_NM,                         /* 터널명 */
         b.FCLTS_INTG_ID$ AS FCLTS_INTG_ID,
         SUBSTR(b.CNSTN_END_DATES$,0,4) AS END_YEAR,      /* 준공년도 */
         b.PBUS_YYNU$ AS PBUS_YYNU,                     /* 공용년수 */
         b.TUNL_LNGT_CLSS_NM$ AS TUNL_LNGT_CLSS_NM,     /* 터널구분 */
         TO_CHAR(SUM (a.T01_CNCST_AMT$)/ 1000,'999,999,999,999') AS CNCST_AMT,            /* 보수금액 */
         ROUND(SUM (a.T01_CNCST_AMT$)/ 1000) AS C_CNCST_AMT,            /* 보수금액 */
         TO_CHAR(MAX (a.T01_TT_CNSTN_AMT$) / 1000,'999,999,999,999') AS TT_CNSTN_AMT,     /* 총보수금액 */
         TO_CHAR(SUM (a.T01_KEPCO_ELPW_FARE$)/ 1000,'999,999,999,999') AS ELPW_FARE      /* 전력요금 */
    FROM    S_N20170808152343639517_09.DW_SF_DAY_M_LCC_T01 a
         INNER JOIN
            S_N20170808152343639517_09.DW_DM_E994AF6D7E18BA51F23DD39 b
         ON a.E7D8E2987C093F08D6CFF4CE87 = b.M_LCC_T011591193129$
   WHERE 1 = 1
           AND b.STNDD_YYYY$ =#{stnddYyyy}
       <if test = "hdqrCd != null and hdqrCd != ''">
            AND b.HDQR_NM$ = #{hdqrCd}
       </if>
       <if test = "mtnofCd != null and mtnofCd != ''">
            AND b.MTNOF_NM$ =  #{mtnofCd}
       </if>
 GROUP BY b.TUNL_NM$,
          b.FCLTS_INTG_ID$,
          b.STNDD_YYYY$,
          b.PBUS_YYNU$,
          b.TUNL_LNGT_CLSS_NM$,
          b.CNSTN_END_DATES$   
         
         
	</select> 

	<!-- LCC 년도별 소요예산 포장 -->
 	<select id="selectYearPavAmtList"  resultType="java.util.Map" parameterType="java.util.Map">
 SELECT b.STNDD_YYYY$ AS STNDD_YYYY,
        b.HDQR_NM$ AS HDQR_NM,
        b.MTNOF_NM$ AS MTNOF_NM,
        b.ROUTE_NM$ AS ROUTE_NM,
        b.CMCN_YEAR$ AS CMCN_YEAR,
        b.PBUS_YYNU$ AS PBUS_YYNU,
        TO_CHAR(SUM (a.P01_YT_AMT$)/1000,'999,999,999,999,999') AS TOT_AMT,
        TO_CHAR(SUM (a.P01_YHMRT_AMT$)/1000,'999,999,999,999,999') AS T_AMT
    FROM    S_N20170808152343639517_09.DW_SF_DAY_M_LCC_P01 a
         INNER JOIN
            S_N20170808152343639517_09.DW_DM_B4A9F2CB5936EF99935A755 b
         ON a.M_LCC_P01$KEY$ = b.KEY$
   WHERE 1 = 1
           AND b.STNDD_YYYY$ =#{stnddYyyy}
       <if test = "hdqrCd != null and hdqrCd != ''">
            AND b.HDQR_NM$ = #{hdqrCd}
       </if>
       <if test = "mtnofCd != null and mtnofCd != ''">
            AND b.MTNOF_NM$ =  #{mtnofCd}
       </if>
GROUP BY b.STNDD_YYYY$,
          HDQR_NM$,
          MTNOF_NM$,
          ROUTE_NM$,
          b.CMCN_YEAR$,
         b.PBUS_YYNU$ 
ORDER BY ROUTE_NM$, b.PBUS_YYNU$,b.PBUS_YYNU$
         
	</select> 

	<!-- LCC 년도별 소요예산 사면 -->
 	<select id="selectYearSmAmtList"  resultType="java.util.Map" parameterType="java.util.Map">
       SELECT b.STNDD_YYYY$ AS STNDD_YYYY
            , HDQR_NM$ AS HDQR_NM
            , MTNOF_NM$ AS MTNOF_NM
            , ROUTE_NM$ AS ROUTE_NM
            , SUM(S01_SLP_CNT$) AS SLP_CNT 
            , b.RPRM_YEAR$ AS RPRM_YEAR
            , CASE WHEN LENGTH(b.DAMG_OCRN_DATES$) =8 THEN TO_DATE(b.DAMG_OCRN_DATES$,'YYYY/MM/DD')  END AS DAMG_OCRN_DATES
            , b.RPRM_TYPE_NM$ AS RPRM_TYPE_NM
            , b.ESSN_MTOC_NM$ AS ESSN_MTOC_NM
            , b.RNFL_DIPT_NM$ AS RNFL_DIPT_NM
            , b.SNOW_DIPT_NM$ AS SNOW_DIPT_NM
            , b.TRFV_DIPT_NM$ AS TRFV_DIPT_NM
            , TO_CHAR(SUM (a.S01_SBCT_AMT$)/ 1000,'999,999,999,999,999') AS SBCT_AMT
            , ROUND(SUM (a.S01_SBCT_AMT$)/ 1000) AS C_SBCT_AMT
    FROM    S_N20170808152343639517_09.DW_SF_DAY_M_LCC_S01 a
         INNER JOIN
            S_N20170808152343639517_09.DW_DM_X523CA26E3A12BA9311FF51 b
         ON a.X61B63D7806FB81721F74D4F69 =
               b.M_LCC_S011187908602$
   WHERE 1 = 1
           AND b.STNDD_YYYY$ =#{stnddYyyy}
       <if test = "hdqrCd != null and hdqrCd != ''">
            AND b.HDQR_NM$ = #{hdqrCd}
       </if>
       <if test = "mtnofCd != null and mtnofCd != ''">
            AND b.MTNOF_NM$ =  #{mtnofCd}
       </if>
GROUP BY b.STNDD_YYYY$,
         b.HDQR_NM$,
         b.MTNOF_NM$,
         b.ROUTE_NM$,
         b.RPRM_YEAR$,
         b.DAMG_OCRN_DATES$,
         b.RPRM_TYPE_NM$,
         b.ESSN_MTOC_NM$,
         b.RNFL_DIPT_NM$,
         b.SNOW_DIPT_NM$,
         b.TRFV_DIPT_NM$
ORDER BY b.HDQR_NM$,
          b.MTNOF_NM$,
         b.ROUTE_NM$,
         b.DAMG_OCRN_DATES$ DESC
         
	</select> 
	
	<!-- 상태등급별 적용공법 -->
	<select id="selectLccStatMtList"  resultType="java.util.Map" parameterType="java.util.Map">
	<![CDATA[ 
WITH LCC_STAT AS (
SELECT    RPRM_MTOC_NM          /* 보수공법명 */
              , RPRM_MTOC_CD          /* 보수공법코드 */
              , A_CNT
              , B_CNT
              , C_CNT
              , D_CNT 
              , TOT_CNT
   FROM 
            (       
 SELECT 
               a.RPRM_MTOC_NM$ AS  RPRM_MTOC_NM        /* 보수공법명 */
              ,a.RPRM_MTOC_CD$ AS  RPRM_MTOC_CD     /* 보수공법코드 */
              , SUM(CASE WHEN a.BRDG_GRAD_CD$ = 'A' THEN b.BA04_RPRM_CNT$ ELSE 0 END) AS A_CNT
              , SUM(CASE WHEN a.BRDG_GRAD_CD$ = 'B' THEN b.BA04_RPRM_CNT$ ELSE 0 END) AS B_CNT
              , SUM(CASE WHEN a.BRDG_GRAD_CD$ = 'C' THEN b.BA04_RPRM_CNT$ ELSE 0 END) AS C_CNT
              , SUM(CASE WHEN a.BRDG_GRAD_CD$ = 'D' THEN b.BA04_RPRM_CNT$ ELSE 0 END) AS D_CNT
              , SUM(CASE WHEN a.BRDG_GRAD_CD$ IN ('A','B','C', 'D') THEN b.BA04_RPRM_CNT$ ELSE 0 END) AS TOT_CNT
        FROM S_N20170808152343639517_09.DW_DM_X3E44D6365BC75C0FC5FFD4 a
               ,  S_N20170808152343639517_09.DW_SF_DAY_M_LCC_BA04 b
   WHERE 1 = 1
        AND  a.KEY$=b.M_LCC_BA04$KEY$
        ]]>
        AND a.STNDD_YYYY$ = #{startYear}
       <if test = "ispc_kind != null and ispc_kind != ''">
            AND a.ISPC_KIND_NM$ = #{ispc_kind}
       </if>
       <if test = "asmt != null and asmt != ''">
            AND a.ASMT_NM$ =  #{asmt}
       </if>
<![CDATA[ 
GROUP BY a.RPRM_MTOC_CD$ ,a.RPRM_MTOC_NM$
ORDER BY SUM(b.BA04_RPRM_CNT$) DESC
)
WHERE ROWNUM <= #{row_cnt}
]]>
) 
SELECT a.*
          , A_TOT_CNT
          , B_TOT_CNT
          , C_TOT_CNT
          , D_TOT_CNT
             , NVL(ROUND(CASE WHEN A_TOT_CNT > 0 THEN A_CNT / A_TOT_CNT * 100 END,1),0)||'%' AS A_RT
             , NVL(ROUND(CASE WHEN B_TOT_CNT > 0 THEN B_CNT / B_TOT_CNT * 100 END,1),0)||'%' AS B_RT
             , NVL(ROUND(CASE WHEN C_TOT_CNT > 0 THEN C_CNT / C_TOT_CNT * 100 END,1),0)||'%' AS C_RT
             , NVL(ROUND(CASE WHEN D_TOT_CNT > 0 THEN D_CNT / D_TOT_CNT * 100 END,1),0)||'%' AS D_RT
   FROM LCC_STAT a
       ,  (SELECT SUM(A_CNT) AS A_TOT_CNT
                , SUM(B_CNT) AS B_TOT_CNT
                , SUM(C_CNT) AS C_TOT_CNT
                , SUM(D_CNT) AS D_TOT_CNT
            FROM LCC_STAT
          WHERE 1 = 1
           ) b
  ORDER BY TOT_CNT DESC
	</select> 
	
	
	<!-- LCC 상태등급변화 교량 -->
 	<select id="selectYearStatBrdgList"  resultType="java.util.Map" parameterType="java.util.Map">
     SELECT BRDG_NM$ AS BRDG_NM
          , HDQR_NM$ AS HDQR_NM
          , MTNOF_NM$ AS MTNOF_NM
          , ISPC_KIND_NM$ AS ISPC_KIND_NM
          , ISPC_DATES$ AS ISPC_DATES
          , BRDG_INDX$ AS BRDG_INDX
          , NVL(BRDG_GRAD_CD$,'미분류') AS BRDG_GRAD_CD
          , ISPC_YEAR$ AS ISPC_YEAR
  FROM S_N20170808152343639517_09.DW_SF_DAY_M_LCC_BA05 a
         , S_N20170808152343639517_09.DW_DM_BD2ED50486766DF79C580D8 b
WHERE 1=1
    AND M_LCC_BA05$KEY$ = KEY$
    AND b.ISPC_YEAR$ =#{stnddYyyy}
    AND ISPC_SEQ$ = 1
       <if test = "hdqrCd != null and hdqrCd != ''">
            AND b.HDQR_NM$ = #{hdqrCd}
       </if>
       <if test = "mtnofCd != null and mtnofCd != ''">
            AND b.MTNOF_NM$ =  #{mtnofCd}
       </if>
       <if test = "ispckindCd != null and ispckindCd != ''">
            AND b.ISPC_KIND_NM$ =  #{ispckindCd}
       </if>
ORDER BY BRDG_NM$
	</select> 
	
	<!-- LCC 상태등급변화 상세 교량 -->
 	<select id="selectYearStatBrdgDtl"  resultType="java.util.Map" parameterType="java.util.Map">
	<![CDATA[
      SELECT BRDG_NM$ AS BRDG_NM
          , ISPC_KIND_NM$ AS ISPC_KIND_NM
          , ISPC_DATES$ AS ISPC_DATES
          , BRDG_INDX$ AS BRDG_INDX
          , NVL(BRDG_GRAD_CD$,'미분류') AS BRDG_GRAD_CD
          , ISPC_YEAR$ AS ISPC_YEAR
          ,  NVL(ASMT_CD08$,'미분류') AS ASMT_CD08
          ,  NVL(ASMT_CD04$,'미분류') AS ASMT_CD04
          ,  NVL(ASMT_CD03$,'미분류') AS ASMT_CD03
          ,  NVL(ASMT_CD09$,'미분류') AS ASMT_CD09
          ,  NVL(ASMT_CD06$,'미분류') AS ASMT_CD06
          ,  NVL(ASMT_CD01$,'미분류') AS ASMT_CD01
          ,  NVL(ASMT_CD11$,'미분류') AS ASMT_CD11
          ,  NVL(ASMT_CD02$,'미분류') AS ASMT_CD02
          ,  NVL(ASMT_CD05$,'미분류') AS ASMT_CD05
          ,  NVL(ASMT_CD12$,'미분류') AS ASMT_CD12
          ,  NVL(ASMT_CD07$,'미분류') AS ASMT_CD07
          ,  NVL(ASMT_CD10$,'미분류') AS ASMT_CD10
  FROM S_N20170808152343639517_09.DW_SF_DAY_M_LCC_BA05 a
         , S_N20170808152343639517_09.DW_DM_BD2ED50486766DF79C580D8 b
WHERE 1=1
    AND M_LCC_BA05$KEY$ = KEY$
    AND b.ISPC_YEAR$ <= #{stnddYyyy}
 ]]>
   <if test = "hdqrCd != null and hdqrCd != ''">
		AND b.HDQR_NM$ = #{hdqrCd}
   </if>
   <if test = "mtnofCd != null and mtnofCd != ''">
		AND b.MTNOF_NM$ =  #{mtnofCd}
   </if>
   <if test = "ispckindCd != null and ispckindCd != ''">
		AND b.ISPC_KIND_NM$ =  #{ispckindCd}
   </if>
    <if test = "brdg_nm != null and brdg_nm != ''">
		AND b.BRDG_NM$ =  #{brdg_nm}
   </if>
ORDER BY ISPC_DATES$ DESC	
 	
 	</select>
 	
 	
	<!-- LCC 상태등급변화 터널 -->
 	<select id="selectYearStatTunlList"  resultType="java.util.Map" parameterType="java.util.Map">
        SELECT a.HDQR_NM$ AS HDQR_NM
             , a.MTNOF_NM$ AS MTNOF_NM
             , a.TUNL_NM$ AS TUNL_NM
             , a.ISPC_DATES$ AS ISPC_DATES
             , a.STRC_ISPC_KIND_NM$ AS STRC_ISPC_KIND_NM
             , NVL(a.SAFE_GRAD_STAT_GRAD_NM$,'미분류') AS SAFE_GRAD_STAT_GRAD_CD
             , SUBSTR(a.ISPC_DATES$,0,4) AS ISPC_YEAR
             , a.DFCT_INDX$ AS DFCT_INDX
      FROM S_N20170808152343639517_09.DW_DM_C865D7072ACDE0F20C63173 a
   WHERE 1 =1
       <if test = "hdqrCd != null and hdqrCd != ''">
            AND a.HDQR_NM$ = #{hdqrCd}
       </if>
       <if test = "mtnofCd != null and mtnofCd != ''">
            AND a.MTNOF_NM$ =  #{mtnofCd}
       </if>
       <if test = "ispckindCd != null and ispckindCd != ''">
            AND a.ISPC_KIND_NM$ =  #{ispckindCd}
       </if>
       <if test = "tunl_nm != null and tunl_nm != ''">
     	    <![CDATA[
       		AND ISPC_DATES$  <= #{stnddYyyy}||'1231' 
            AND a.TUNL_NM$ =  #{tunl_nm}
            ORDER BY ISPC_DATES$ DESC
            ]]>
       </if>
       <if test = "tunl_nm == null or tunl_nm == ''">
       	   AND ISPC_DATES$ BETWEEN #{stnddYyyy}||'0101' AND #{stnddYyyy}||'1231'
           AND ISPC_SEQ$ = 1
           ORDER BY TUNL_NM$
       </if>
	</select>
	
	<!-- LCC 상태등급변화 사면 -->
	<select id="selectStatSlpList"  resultType="java.util.Map" parameterType="java.util.Map">
		 SELECT b.HDQR_NM$ AS HDQR_NM              /* 본부*/
	          , b.MTNOF_NM$ AS MTNOF_NM          /* 지사*/
	          , b.ROUTE_NM$ AS ROUTE_NM          /* 노선*/
	          , b.DRVE_DRCT_NM$ AS DRVE_DRCT_NM          /* 주행방향*/
	          , b.ISPC_PLAN_YYMM$ AS ISPC_PLAN_YYMM          /* 점검계획월*/
	          , b.ISPC_STRT_DATES$ AS ISPC_STRT_DATES          /* 점검시작일자*/
	          , b.ISPC_KIND_NM$ AS ISPC_KIND_NM          /* 점검종류명*/
	          , b.ISPC_DETL_KIND_NM$ AS ISPC_DETL_KIND_NM          /* 점검상세종류명*/
	          , b.ISPC_CLSS_NM$ AS ISPC_CLSS_NM          /* 점검구분명*/
	          , b.STAT_EVAL_GRAD_NM$ AS STAT_EVAL_GRAD_NM          /* 상태평가등급*/
	          , b.SAFT_EVAL_GRAD_NM$ AS SAFT_EVAL_GRAD_NM          /* 안전성평가등급*/
	          , b.OVRL_EVAL_GRAD_NM$  AS OVRL_EVAL_GRAD_NM          /* 종합평가등급*/
	          , SUM(a.S02_ISPC_TERM_DAYS$) AS S02_ISPC_TERM_DAYS          /* 점검기간일수*/
	          , SUM(a.S02_EVAL_TTSC$) AS S02_EVAL_TTSC          /* 평가총점*/
	  FROM S_N20170808152343639517_09.DW_SF_DAY_M_LCC_S02 a
	         , S_N20170808152343639517_09.DW_DM_X5661AFAAF8CBA33837878A b
  	   WHERE 1 =1
	     AND a.M_LCC_S02$KEY$ = b.KEY$
	     AND b.STNDD_YYYY$ = #{stnddYyyy}
	     AND b.FLGCD$ =#{flgcd}
	   <if test = "hdqrCd != null and hdqrCd != ''">
            AND b.HDQR_NM$ = #{hdqrCd}
       </if>
       <if test = "mtnofCd != null and mtnofCd != ''">
            AND b.MTNOF_NM$ =  #{mtnofCd}
       </if>
       <if test = "routeCd != null and routeCd != ''">
            AND a.ROUTE_NM$ =  #{routeCd}
       </if>
	   <if test = "drve_drct_cd != null and drve_drct_cd != ''">
            AND b.drve_drct_cd$ = #{drve_drct_cd}
       </if>
       <if test = "ispckindCd != null and ispckindCd != ''">
            AND b.ISPC_KIND_NM$ =  #{ispckindCd}
       </if>
	GROUP BY HDQR_NM$
	          , MTNOF_NM$
	          , ROUTE_NM$
	          , DRVE_DRCT_NM$ 
	          , ISPC_PLAN_YYMM$
	          , ISPC_STRT_DATES$
	          , ISPC_KIND_NM$
	          , ISPC_DETL_KIND_NM$
	          , ISPC_CLSS_NM$
	          , STAT_EVAL_GRAD_NM$
	          , SAFT_EVAL_GRAD_NM$
	          , OVRL_EVAL_GRAD_NM$ 
	ORDER BY HDQR_NM$,MTNOF_NM$ ,ROUTE_NM$, ISPC_STRT_DATES$ DESC
	</select>

	<select id="selectEtlStat"  resultType="java.util.Map" parameterType="java.util.Map">
SELECT JOB_GBN
         , COUNT(*) AS TOT_CNT 
         , COUNT(*) - NVL(SUM(CASE WHEN ETL_ERR_YN ='Y' THEN 1 ELSE 0 END ),0) AS PROC_CNT
         , CASE WHEN  NVL(SUM(CASE WHEN ETL_ERR_YN ='Y' THEN 1 ELSE 0 END ),0)  > 0 THEN '에러' ELSE '정상' END  AS ETL_ERR_YN       
    FROM (
  SELECT  CASE WHEN INSTR(A.ETL_ID,'PAV')  != 0 THEN '포장관리' 
                      WHEN INSTR(A.ETL_ID,'LMC')  != 0 THEN '차선관리' 
                      WHEN INSTR(A.ETL_ID,'STR')  != 0 THEN '구조물' 
                      WHEN INSTR(A.ETL_ID,'FCP')  != 0 THEN '건설안전' 
                      WHEN INSTR(A.ETL_ID,'TER')  != 0 THEN '터널전력량' 
                      WHEN INSTR(A.ETL_ID,'LCC')  != 0 THEN '생애주기비용' 
                      WHEN INSTR(A.ETL_ID,'REV')  != 0 THEN '화물차량' 
                      ELSE '기타(공통)'
               END AS JOB_GBN
           , CASE WHEN INSTR(A.ETL_ID,'PAV')  != 0 THEN 1
                      WHEN INSTR(A.ETL_ID,'LMC')  != 0 THEN 2
                      WHEN INSTR(A.ETL_ID,'STR')  != 0 THEN 3
                      WHEN INSTR(A.ETL_ID,'FCP')  != 0 THEN 4
                      WHEN INSTR(A.ETL_ID,'TER')  != 0 THEN 5
                      WHEN INSTR(A.ETL_ID,'LCC')  != 0 THEN 6
                      WHEN INSTR(A.ETL_ID,'REV')  != 0 THEN 7
                      ELSE 8
               END AS JOB_ORD
           , B.ETL_ERR_YN AS ETL_ERR_YN
         FROM CMMN_ETL_MNTR A
           , (SELECT B.*
                        , ROW_NUMBER() OVER(PARTITION BY ETL_SN ORDER BY ETL_DTL_SN DESC) AS R_NUM
                FROM DBO.DW_ETL_DTL_MNTR B
             ORDER BY  ETL_DTL_SN DESC) B
         WHERE A.ETL_SN = B.ETL_SN(+)
              AND B.R_NUM(+) = 1
  )
GROUP BY JOB_GBN
  ORDER BY MAX(JOB_ORD)	
	
	</select>
	
	<!-- ETL 상태 초기화 -->
	<update id="updateEtlStat" >
	<![CDATA[ 
   UPDATE DBO.DW_ETL_DTL_MNTR
      SET ETL_ERR_YN ='N'
   	    , ETL_PRC_YN ='Y'
   WHERE (ETL_SN,ETL_DTL_SN) IN (SELECT ETL_SN
                                      , MAX(ETL_DTL_SN) 
                              	   FROM DBO.DW_ETL_DTL_MNTR
                                  GROUP BY ETL_SN
                                 )
		]]>
	</update>
	
	
</mapper>