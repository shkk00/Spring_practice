package kr.go.cris.ptl.centerintro.edu.controller;

import java.io.IOException;
import java.io.Writer;
import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.go.cris.commons.utils.XmlUtil;
import kr.go.cris.ptl.centerintro.edu.service.EduService;
import kr.go.cris.ptl.centerintro.edu.vo.EduVo;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;


/**
 * <pre>
 * 교육관리 Controller 구현
 * 
 * </pre>
 * @FileName : EduController.java
 * @package  : kr.go.cris.ptl.centerintro.edu.controller
 * @author   : wonki0138
 * @date     : 2018. 6. 28.
 * 
 */
@Controller("eduController")
public class EduController {

    @Resource
    private EduService eduService;
    
  
    /**
     * <pre>
     *    * 교육 목록을 조회한다
     *
     * </pre>
     * @author : wonki0138
     * @date   : 2018. 6. 28. 
     * @param eduVo
     * @param model
     * @return
     * @throws IOException
     * @throws SQLException
     */
    @RequestMapping(value="centerintro/edu/listEdu.do")
    public String selectEduList(EduVo eduVo, ModelMap model) throws IOException , SQLException , NullPointerException  {
    	        
        model.addAttribute("eduVo", eduVo);
        
        
    	return "centerintro/edu/listEdu.tiles";
    } 
  
    /**
     * <pre>
     * 교육 상세 화면을 조회한다.
     *
     * </pre>
     * @author : wonki0138
     * @date   : 2018. 6. 28. 
     * @param eduVo
     * @param model
     * @param request
     * @return
     * @throws IOException
     * @throws SQLException
     */
    @RequestMapping(value="centerintro/edu/eduView.do")
    public String selectEduView(EduVo eduVo, Model model, HttpServletRequest request) throws IOException , SQLException , NullPointerException {
    	
    	
    	//검색 PARAM	
    	String page = eduVo.getPage();
		String searchKeyword = eduVo.getSearchKeyword();
		String searchCondition = eduVo.getSearchCondition();
				
		eduVo.setEdc_progrm_id(request.getParameter("edc_progrm_id"));
       	
		EduVo list = eduService.selectEduView(eduVo);
        
        if(list != null){			
			
        	list.setPage(page);
        	list.setSearchKeyword(searchKeyword);
        	list.setSearchCondition(searchCondition);
		    
		    model.addAttribute("eduList", list);				
        }  	
        
        
    	return "centerintro/edu/eduView.tiles";
    } 
    
 
   /**
	 * <pre>
	 *	교육 관리 목록 데이터를 조회한다.
	 *
	 * </pre>
	 * @author : wonki0138
	 * @date   : 2018. 6. 28. 
	 * @param request
	 * @param eduVo
	 * @param resp
	 * @param out
	 * @throws IOException, SQLException , NullPointerException
	 */
	@RequestMapping("centerintro/edu/eduRead.do")
   public void eduRead(HttpServletRequest request, EduVo eduVo, HttpServletResponse resp, Writer out)  throws IOException , SQLException , NullPointerException {
	   
   	String xml = "";
    
   	eduVo.setEdc_se_code("EDC001");
   	
   	List<EduVo> list = eduService.selectEduList(eduVo);
   	
   	int totalCnt = eduService.selectEduTotalCount(eduVo);
   	
   	if(list != null){
   		if(list.size() > 0){
   			
   			xml = XmlUtil.listToXml(list);
   			
   			 /* 총카운터 세팅*/
   			 
   	    	StringBuffer sb = new StringBuffer();
   	    	String[] str = xml.split("<items>");
   	    	
   	    	sb.append(str[0]);
   	    	sb.append("<items>");
   	    	sb.append("<totalPageCnt>"+Math.ceil((double)totalCnt/(double)10)+"</totalPageCnt>\n");    	 
   	    	sb.append("<totalDataCnt>"+totalCnt+"</totalDataCnt>\n");
   	    	sb.append(str[1]);
   	    	
   	    	xml = sb.toString();
   		}
   	}	
   	resp.setContentType("text/xml");
   	resp.setCharacterEncoding("UTF-8");
   	resp.setHeader("Cache-Control", "no-cache");
   	resp.setHeader("Pragma", "no-cache");
   	resp.setDateHeader("Expires", -1);
   
   	out.write(xml);
  	
   	out.flush();
   	
     
   }
   
   
   /**
	 * <pre>
	 *	교육 정보를 화면으로 이동한다.
	 *
	 * </pre>
	 * @author : wonki0138
	 * @date   : 2018. 6. 28. 
	 * @param eduVo
	 * @param model
	 * @return
	 * @throws IOException
	 * @throws SQLException
	 */
	@RequestMapping(value="centerintro/edu/eduInfo.do")
   public String eduInfo(EduVo eduVo, ModelMap model) throws IOException , SQLException , NullPointerException {
   	        
       model.addAttribute("eduVo", eduVo);
       
       
   	return "centerintro/edu/eduInfo.tiles";
   }

    
}
