var ctxt = "/cris"
var closePop; 
var pagetotalCnt=0;
var pageLen=10;
//전역변수로 gnb 번호, 메인은 필요없으므로 999 적용
var pn = 999;

var all_search_yn="N";

$(function(){	                                               

	//권한체크
	fn_getAuth(location.pathname);
	
	//체크박스 이벤트
	$('.chk_name').click(function(){
		var isCheck = $(this).parent().find('input[type=checkbox]').prop('checked');
		if(isCheck){
			$(this).parent().find('input[type=checkbox]').prop('checked',false);
		}else{
			$(this).parent().find('input[type=checkbox]').prop('checked',true);
		}
	});
    
    //언어선택 이벤트
    if($('#user_locale').val() == 'en'){
    	$('#user_ko').attr('style','');
    	$('#user_en').attr('style','display:none;');
    }else{
    	$('#user_ko').attr('style','display:none;');
    	$('#user_en').attr('style','');
    }
    
	var winW = $(window).width();   
	var winH = $(window).height();
	
});

function fn_lang(lang){

    $.ajax({
        url: ctxt +'/index/chgLang.do',
        data:{"lang":lang},
        async: false,
        cache: false,    //cache가 있으면 새로운 내용이 업데이트 되지 않는다.
        type: 'GET'
    });
    
    location.reload();
}
   
/**
  * 화면별 버튼 권한 설정
  * param[0] : 화면URL
  * return 
  */
function fn_getAuth(location_path){
	//화면 버튼 숨기기
	var location_path  = location_path.replace(ctxt , '');
	$.ajax({
	    url : ctxt +'/index/auth/readMenuAuth.do',
	    data : {"menu_url":location_path},   
	    contentType: 'text/xml;charset=utf-8',   //서버로 데이터를 보낼 때 사용.
	    type : 'GET',
	    dataType : 'text',   
	    async: false,
	    cache:false,
	    success : function(result) {
	           	var xmlObj = $(result);
	           	var sel_menu_id="";
	           	var r_yn ='N';var s_yn ='N';var d_yn ='N';var l_yn ='N';var e_yn ='N';var u_yn ='N';var c_yn ='N';
	           	xmlObj.find('item').each(function(cnt){
	           		
	           		var auth_gbn = $(this).find('auth_gbn').text();
	           		
	           		if(auth_gbn == "READ"){ r_yn="Y";
	           		}else if(auth_gbn == "SAVE"){ s_yn="Y";
	           		}else if(auth_gbn == "DEL"){ d_yn="Y";
	           		}else if(auth_gbn == "DOWNLOAD"){ l_yn="Y";
	           		}else if(auth_gbn == "ETC"){ e_yn="Y";
	           		}else if(auth_gbn == "UPD"){ u_yn="Y";
	           		}else if(auth_gbn == "ALL_SEARCH"){
	           			all_search_yn = "Y";    
	           		}else if(auth_gbn == "ARCHIVE_HIDE"){
	           			$("#archive_auth_gbn").val("on");
	           		} 
	           	});  
	           	if(r_yn == 'N'){ $('input[name=search_btn]').detach(); $('button[name=search_btn]').detach(); $('a[name=search_btn]').detach();};
				if(s_yn == 'N'){ $('input[name=save_btn]').detach();$('button[name=save_btn]').detach();$('a[name=save_btn]').detach();};
				if(d_yn == 'N'){ $('input[name=del_btn]').detach();$('button[name=del_btn]').detach();$('a[name=del_btn]').detach();};
				if(l_yn == 'N'){ $('input[name=download_btn]').detach();$('button[name=download_btn]').detach();$('a[name=download_btn]').detach();};
				if(e_yn == 'N'){ $('input[name=etc_btn]').detach();$('button[name=etc_btn]').detach();$('a[name=etc_btn]').detach();};
				if(u_yn == 'N'){ $('input[name=upd_btn]').detach();$('button[name=upd_btn]').detach();$('a[name=upd_btn]').detach();};
	         	   
				
				     
	    },
	    error : function() { // Ajax 전송 에러 발생시 실행
	           fn_alert("메뉴권한조회에 실패하였습니다.");   
	    },
	});
}

function fn_tbvalchk(tbody_id, param_idx, param_nm){
	
	var isVal = true;
	
	$('#'+tbody_id+' tr').each(function(cnt){
		var trObj = $(this);
		for(var i=0; i <param_idx.length;i++){
			if(trObj.find('td:eq('+param_idx[i]+') input[type=text]').val() == ''){
				isVal= false;
				msg= cnt+1+"번째 줄 "+param_nm[i]+"는 필수 입력입니다.";
				paramObj=trObj;
				trObj.find('td:eq('+param_idx[i]+') input[type=text]').focus();
				return false;
			}
		}
	});
	return isVal;
}
/**
 * 필수값 체크 
 * param[0] : 체크colum list
 * param[1] : 체크colum list
 * return 
 */
function checkVal(colList,nameList){

	var isErr= false;
	
	for(var i=0; i < colList.length; i ++){
		if( $('#'+colList[i]).val() == ''  ||  $('#'+colList[i]).val() == undefined ){
			fn_alert(nameList[i]+"는/은 필수입력입니다.",'c')
			isErr= true;
			break;
		}
	}
	return isErr;
}

/**알림창 
 * @param 알림 메세지
 * @param 알림창 타입
 */
function fn_alert(msg,type){
	
	var strType="";
	
	if(type == undefined){
		strType='n';
	}else{
		strType=type;
	}

	var popHtml  = '<div>';
	// 이미지 디자인 하셔서 이미지url변경 하시면 됩니다.
	if(strType == "n"){
		popHtml += '<div class="popimg alert02"><img src="/resources/img/common/alert02.png" alt="팝업이미지" ></div>';	// 테스트_버튼2 - 이미지 경로
	}else if(strType == "e"){
		popHtml += '<div class="popimg alert01"><img src="/resources/img/common/alert03.png" alt="팝업이미지" ></div>';	// 테스트_버튼3 - 이미지 경로
	}else if(strType == "c"){
		popHtml += '<div class="popimg alert01"><img src="/resources/img/common/alert01.png" alt="팝업이미지" ></div>';	// 테스트_버튼1 - 이미지 경로
		
	}
	
	/*popHtml += '&nbsp;&nbsp;&nbsp;';*/
	popHtml += msg+'</div>';

	$('#msg_content').html(popHtml);
	$('a[name=fadeandscale]').click();
	
	$('#fadeandscale').contents().remove('br');
	

}

/**그리드 초기 세팅
 * @param gridnm
 * @param url
 * @param param
 * @param colnm
 * @param paramModel
 * @param fnc
 * @returns {___anonymous2002_2910}
 */
function setGrid(gridnm,url,param,colnm,paramModel,fnc,row_num){
	var grid={
	          	url : url,
	          	datatype : "json",
	          	mtype : "POST",
	          	postData : param, //파라미터
	          	jsonReader : {
	        	    page: "page", 
					total: "total", 
					root: "items" ,
					records: function(obj){return obj.length;},
					repeatitems: false
	          	},
	          	colNames : colnm ,
	          	colModel : paramModel,
	          	pager :'#pager',
	          	emptyrecords: "검색된 정보가 없습니다.",
	          	rowNum : row_num,		// 조회개수
	          	rownumbers:true,
	          	gridview:true,
	          	showpage:true, 
	          	viewrecords: true,	
	      	  	loadonce: false,
	           	autowidth :false,
               	height :'auto',
               	hidegrid:false,
	          	caption: gridnm,
          		onPaging: function(action){ 	//페이징 처리
    			},
    			onSelectRow: eval(fnc[0]),
    			onCellSelect:eval(fnc[1])
			}
	return grid;
}


/**
 * 메소드 : 날짜 가져오기
 * @param 날짜 , 더하는 일자, 포맷, 마지막일 L 넘겨주면 해당월 마지막일자
 * @returns {String}
 * sample fn_getDate("2016/05/01",7,"-")
 * @param 없으면 현재일자 20160403 리턴
 */
function fn_getDate(){
	var myDate; 
	var result = "";
	
	if(arguments[0] == undefined || arguments[0] == "" ){
		myDate = new Date();
	}else{
		myDate = new Date(arguments[0]);
	} 

	if(arguments[1] != undefined){
		myDate.setDate (myDate.getDate() + arguments[1]);
	}
	var data_fomat = arguments[2];
	
	var year = myDate.getFullYear();
	var month = myDate.getMonth() +1;
	var day = myDate.getDate();
	
	if(month < 10){
		month = "0"+month;
	}
	if(day < 10){
		day = "0"+day;
	}
	
	if(arguments[3] != undefined || arguments[3] == "L"){
		day = ( new Date( year, month, 0) ).getDate();
	}
	
	if(data_fomat == undefined || data_fomat == "" ){
		result = year+""+ month+""+day;
	}else{
		result = year+ data_fomat + month+ data_fomat +day;
	}
	
	return result;
	
}


/**
 * 날짜 검증
 * @param stDt
 * @param edDt
 * @returns {Boolean}
 */
function fn_dateChk(stDt, edDt){
	
	if($("#"+stDt).val() != "" ){
		if ($("#"+stDt).val().replace(/-/g, "").length != '8') {
			fn_alert('시작 년월일을 정확하게 입력하세요','c');
			$("#"+stDt).focus();
			return false;
		}
		if($("#"+stDt).val().replace(/-/g, "") != $("#"+stDt).val().replace(/[^0-9]/gi,'')){
			fn_alert("시작일자는 숫자로만 가능합니다.",'c');
			$("#"+stDt).focus();
			return false;
		}
		if($("#"+edDt).val() == ''){
			fn_alert("종료 일자를 입력해 주세요!",'c');
			return false;
		}
	}
    
	if($("#"+edDt).val() != "" ){
		if($("#"+stDt).val() == ''){
			fn_alert("시작 일자를 입력해 주세요!",'c');
			return false;
		}
		if ($("#"+edDt).val().replace(/-/g, "").length != '8') {
			fn_alert('종료 년월일을 정확하게 입력하세요','c');
			$("#"+edDt).focus();
			return false;
		}
		if($("#"+edDt).val().replace(/-/g, "") != $("#"+edDt).val().replace(/[^0-9]/gi,'')){
			fn_alert("종료일자는 숫자로만 가능합니다.",'c');
			$("#"+edDt).focus();
			return false;
		}
		if ($("#"+stDt).val().replace(/-/g, "") > $("#"+edDt).val().replace(/-/g, "")) {
			fn_alert('시작 일자가 종료 일자<br /> 보다 클 수 없습니다.','c');
			$("#"+stDt).focus();
			return false;
		}
	}
}

///파일 업로드 사이즈 체크
function fileCheck(val , fileMaxSize , view  )  //  value ,  파일사이즈 mb , 화면 param
{

	   var agent = navigator.userAgent.toLowerCase(); 

	   var fileType = getFileType(val.value);
	   var fileIndex = $(val).parent().parent().index();	


	   var fileName =  $("input[name=uploadFile]")[fileIndex];

	   fileType = fileType.toLowerCase();

	   if( val.value != ""){
		   if (view == 'report'){ // 팝업 게시판 
			   	if(fileType != 'jpg'  && fileType != 'gif'  && fileType != 'png'  && fileType != 'jpeg' && fileType != 'hwp' && fileType != 'pdf'  ){
			
				      	alert("확장자는  jpg, gif, png, jpeg, hwp, pdf 만 가능합니다. ");
				    	
				      	if (agent.indexOf("msie") != -1) {
				       		$(val).replaceWith( $(val).clone(true) );
				    	} else {
				    		$(val).val("");
				    	}
				      	
				      	return false ;
			     	
			     }
			   	
		   }else if(view == 'rnd'){
			   
			   	if(fileType != 'jpg'  && fileType != 'gif'  && fileType != 'png'  && fileType != 'jpeg' && fileType != 'hwp' && fileType != 'png'  ){
			
				      	alert("확장자는  jpg, gif, png, jpeg, hwp, png 만 가능합니다. ");
				    	
				      	if (agent.indexOf("msie") != -1) {
				       		$(val).replaceWith( $(val).clone(true) );
				    	} else {
				    		$(val).val("");
				    	}			      	
				      	return false ;
			     }  	
			   
		   }else{ 	
			   
			   if(fileType != 'jpg'  && fileType != 'gif'  && fileType != 'png'  && fileType != 'jpeg'){
				
			      	alert("확장자는  jpg, gif, png, jpeg만 가능합니다. ");
			    	
			      	if (agent.indexOf("msie") != -1) {
			       		$(val).replaceWith( $(val).clone(true) );
			    	} else {
			    		$(val).val("");
			    	}
			      	
			      	return false ;    	
			   	}
		  } 
		       
	}


   //메가바이트 단위로 받아서  = > byte로 변환해 준다.
   var maxSize = fileMaxSize    //   메가바이트 30mb  
   	maxSize = maxSize*1024*1024 ;  //byte
   
   var fileSize = Math.round(fileName.files[0].size);  //byte 	
   
   if(fileSize > maxSize)
   {
       alert("최대용량을 초과하였습니다.\n\n 최대 사이즈 : "+maxSize +"byte , 업로드 사이즈 : "+fileSize+"byte");
       
       return false;
       
   }


}

//파일 업로드 확장자 체크 
function getFileType(filePath)
{
   var index = -1;
       index = filePath.lastIndexOf('.');
       
   var type = "";

   if(index != -1)// 파일이 존재하면
    {
        type = filePath.substring(index+1, filePath.length);
    }
    else
    {
        type = "";
    }
   return type;
}

/**
 * @param id
 * @param before
 * @param next
 */
function getYear(id,before,next){
	var today = new Date();
	var html = "";
	var year = today.getFullYear();
	var val = 0;
	//현재기준 과거 년도
	for (var int = before; int >= 0; int--) {
		val = Number(year) - int;
		
		if(int == 0){
			html += '<option value="'+ val +'" selected="selected" >'+ val +'년</option>';
		}else{
			html += '<option value="'+ val +'" >'+ val +'년</option>';
		}
	}
	//현재기준 미래 년도
	for (var int2 = 1; int2 < next+1; int2++) {
		val = Number(year) + int2;
		html += '<option value="'+ val +'" >'+ val +'년</option>';
	}
	
	$('#'+id).html(html);
	
}

function fn_loginPop(){

	window.open('/cmmn/pop/loginPop.do','search','width=400,height=420,scrollbars=no');
}

function sendEml(){

	var params = {};
	params.loginid = $('#loginid').val();
	params.user_nm_kor = $('#user_nm_kor').val();
	
	 $.ajax({
	        url: '/login/sendMail.do',
	        data: params,
	        type: 'POST',
	        dataType: 'text',
	        cache: false,
	        success: function(rtnXml) {
	        	fn_alert('이메일이 정상 발송되었습니다.');
	        	setTimeout(fn_close, 1000);
	        },
	 		error : function(){                              // Ajax 전송 에러 발생시 실행
	 			fn_alert('오류가 발생했습니다.<br /> 관리자에게 문의 바랍니다.','e');
	 		}
	 });
	
}

/**
 * 팝업창 닫기
 */
function fn_close(){
	window.close();
}

/**
 * 인증번호 발송
 */
function fn_send(){
	var strRegEmail = /([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
		
	$('#certifyCheck').attr('style','color:red;');
	$('#certifyCheck').text('인증메일 미발송시 e-mail정보를 확인하세요.');
	
	// null체크 - e-mail 
	if ($("#mail_id").val() == '') {
		fn_alert('E-mail을 입력하세요',"c");
		$("#mail_id").focus();
		return;
	}
	
	// null체크 - e-mail 
	if ($("#mail_domain").val() == '') {
		fn_alert('E-mail 도메인을 입력하세요',"c");
		$("#mail_domain").focus();
		return;
	}
	
    if(!strRegEmail.test($('#mail_id').val() + '@' + $('#mail_domain').val())) {
        fn_alert('올바른 전자우편를 입력하세요.',"c");
        $('#mail_id').focus();
        return;
    }
    
	// e-mail - 중복확인 버튼 체크
	if($("#checkedYN").val() != "Y"){
 		fn_alert("E-mail 중복 확인을 하십시요.","c");
		return;
	}
	
	var params = {};
		params.loginid = $('#mail_id').val()+"@"+$("#mail_domain").val();
	
	 $.ajax({
	        url: '/login/sendNum.do',
	        data: params,
	        type: 'POST',
	        dataType: 'text',
	        cache: false,
	        success: function(rtnXml) {
	        	certify_num = rtnXml;
	        	
	        	var html ="※ 발송된 <span>이메일의 인증번호</span>를 입력하세요.";
	        	$('#pop_id').html(html);
	        	$("#modal_content").modal(); 
	        	fn_timer(179);
	        },
	 		error : function(){                              // Ajax 전송 에러 발생시 실행
	 			fn_alert('인증메일 정보를 확인하세요.(오류발생)','e');
	 		}
	 });
	
}

/**
 * 인증번호 확인
 */
function fn_confirm(){

	if($('#confirm_num').val() == ''){
		fn_alert('인증번호를 입력하세요.');
		return;
	}
	
	if (certify_num != $('#confirm_num').val()) {
		fn_alert('잘못된 인증번호입니다.','c');
		$("#confirm_num").focus();
	}else{
		$('#certifyCheck').attr('style','color:green;');
		$('#certifyCheck').text('인증이 완료되었습니다.');
		fn_close();
	}

	$('#confirm_num').val('');
	$('#certifyYN').val('Y');
	
}

var interval;

function fn_timer(duration) {
    
    var timer = duration;
    var hours, minutes, seconds;
    
    interval = setInterval(function(){
        hours	= parseInt(timer / 3600, 10);
        minutes = parseInt(timer / 60 % 60, 10);
        seconds = parseInt(timer % 60, 10);
		
        hours 	= hours < 10 ? "0" + hours : hours;
        minutes = minutes < 10 ? "0" + minutes : minutes;
        seconds = seconds < 10 ? "0" + seconds : seconds;
		
        $('#timer').text(minutes+":"+seconds);
        
        if (--timer < 0) {
            timer = 0;
            clearInterval(interval);
            fn_alert('인증에 실패하셨습니다.<br />인증메일을 재발송하세요.');
    		fn_close();
        }
    }, 1000);
    
}




/* Contents ZoomIn/Out */
function contentsZoom(obj){
	
	var id = obj.id;
	
	if( document.ifrmmain )
	{
		document.ifrmmain.contentsZoom(id);
	}
	else
	{
		clickHandler(id);
	}
}

//현재 폰트 사이즈를 저장할 전역 변수
var currentFontSize ;
var currentFontSize01 ;
var currentFontSize02 ;
var currentFontSize03 ;
var currentFontSize04 ;
var currentFontSize05 ;
var currentFontSize06 ;
var currentFontSize07 ;
var currentFontSize08 ;
var currentFontSize09 ;
var currentFontSize10 ;
var currentFontSize11 ;
var currentFontSize12 ;
var currentFontSize13 ;
var currentFontSize14 ;
var currentFontSize15 ;

//크게, 작게 링크가 클릭되었을때 처리하는 함수
function clickHandler(e)
{
	

	/*
	//이벤트 전파를 막는다.
	e.preventDefault(); 
	
	//크게, 작게 중 어느것이 클릭되었는지 판별
	var whichClicked = $(this).attr("id");
	*/
	var whichClicked = e;
	
	
	
	//현재의 폰트 사이즈를 전역 변수에 저장한다.
	currentFontSize = parseInt($(".inSection").css("font-size"));
	currentFontSize01 = parseInt($("line-height").css("font-size"));
	currentFontSize02 = parseInt($("h3").css("font-size"));
//	currentFontSize03 = parseInt($("dl").css("font-size"));
//	currentFontSize04 = parseInt($("dt").css("font-size"));
//	currentFontSize05 = parseInt($("li").css("font-size"));
	currentFontSize06 = parseInt($(".inSection>tbody>tr>th").css("font-size"));
	currentFontSize07 = parseInt($(".inSection>tbody>tr>td").css("font-size"));
	currentFontSize08 = parseInt($(".inSection>dt").css("font-size"));
	currentFontSize09 = parseInt($(".inSection *").css("font-size"));
	currentFontSize10 = parseInt($(".inSection>dd.substance").css("line-height"));
//	currentFontSize06 = parseInt($(".nation_introduce_form *").css("font-size")); /* 검색서브 소개페이지 */
	currentFontSize11 = parseInt($(".bookInfo").css("font-size"));
	currentFontSize12 = parseInt($(".Dnew_title3>ul>li").css("font-size"));
	currentFontSize13 = parseInt($(".viewLevel2>ul>li").css("font-size"));
//
	//클릭된 링크에 따라 폰트를 크게 혹은 작게 설정합니다.
	switch(whichClicked)
	{
		case "larger" :
			//1폰트 크게한다.
			setFontSize(1) ;
		break ;
		
		case "smaller" :
			//1폰트 작게한다.
			setFontSize(-1) ;
		break ;
		default:
			setFontSize(0) ;
		break;
	}

}

function setFontSize($size)
{
	var totalFontSize = currentFontSize + $size ;
	var totalFontSize01 = currentFontSize01 + $size ;
	var totalFontSize02 = currentFontSize02 + $size ;
//	var totalFontSize03 = currentFontSize03 + $size ;
//	var totalFontSize04 = currentFontSize04 + $size ;
//	var totalFontSize05 = currentFontSize05 + $size ;
	var totalFontSize06 = currentFontSize06 + $size ;
	var totalFontSize07 = currentFontSize07 + $size ;
	var totalFontSize08 = currentFontSize08 + $size ;
	var totalFontSize09 = currentFontSize09 + $size ;
	var totalFontSize10 = currentFontSize10+ $size ;
	var totalFontSize11 = currentFontSize11 + $size ;
	var totalFontSize12 = currentFontSize12 + $size ;
	var totalFontSize13 = currentFontSize13 + $size ;
	var totalFontSize14 = currentFontSize14 + $size ;
	var totalFontSize15 = currentFontSize15 + $size ;
	
	$(".inSection").css({"font-size":totalFontSize+"px"});
	$("line-height").css({"line-height":totalFontSize01+"px"}); 
	$("h3").css({"font-size":totalFontSize02+"px"});
//	$("dl").css({"font-size":totalFontSize03+"px"});
//	$("dt").css({"font-size":totalFontSize04+"px"});
//	$("li").css({"font-size":totalFontSize05+"px"});
	$(".inSection>tbody>tr>th").css({"font-size":totalFontSize06+"px"});
	$(".inSection>tbody>tr>td").css({"font-size":totalFontSize07+"px"});
	$(".inSection>dt").css({"font-size":totalFontSize08+"px"});
	$(".inSection *").css({"font-size":totalFontSize09+"px"});
	$(".inSection>dd.substance").css({"font-size":totalFontSize10+"px"});
	$(".bookInfo").css({"font-size":totalFontSize11+"px"});
	$(".Dnew_title3>ul>li").css({"font-size":totalFontSize12+"px"});
	$(".viewLevel2>ul>li").css({"font-size":totalFontSize13+"px"});

}

/*SNS로전송 */
function sendSNS(sns,title){

	  var HOST = location.protocal + "//" + location.host;
	  var TITLE = encodeURIComponent(title);
	  var FACEBOOK = "http://www.facebook.com/sharer/sharer.php?s=100&p[url]=" + location.href+"&p[title]="+TITLE;
	  var TWITTER = "http://twitter.com/share?text=" + TITLE + "&url=" + location.href;
	  var ME2DAY = "http://me2day.net/posts/new?new_post[body]=" + TITLE + ":" + location.href + "&new_post[tags]=" + HOST;
	  
		switch(sns){
		 case "facebook":
		  window.open(FACEBOOK, "facebookWindow",'width=960,height=500,directories=0,resizable=1,menubar=0,status=0,toolbar=0,scrollbars=1');
		  break;
		 case "twitter":
		  window.open(TWITTER, "twitterWindow",'width=960,height=500,directories=0,resizable=1,menubar=0,status=0,toolbar=0,scrollbars=1');
		  break;
		 case "me2day":
		  window.open(ME2DAY, "me2dayWindow",'width=960,height=500,directories=0,resizable=1,menubar=0,status=0,toolbar=0,scrollbars=1');
	     break;
		 default:
			 window.open(FACEBOOK, "facebookWindow",'width=960,height=500,directories=0,resizable=1,menubar=0,status=0,toolbar=0,scrollbars=1');
			break;
		} 

}


/**
 * 목록으로 이동
 */
function fn_returnListUrl(){

	var form = document.reqForm;
	var returnPage = form.returnListPage.value;	
	form.action = returnPage;
	form.submit();	
}

/**
 * 엔터 조회
 * @param param
 */
function fn_enter_search(param){
	var id_val = $(param).attr('id');	
	
	if(event.keyCode == 13)
	{
		event.preventDefault();
		fn_search(1);
	}	
}

///////////////////////////////////////////////////////////
//팝업 기능관련
//@url URL
//@w 폭
//@h 너비
//@s 스크롤바 여부 1, 'Y'이면 보여줌, 0, '', 'N'이면 숨김
function popup(url,w,h,s){
	var l, t, objPopup;
	l = (screen.width-w)/2;
	t = (screen.height-h)/2;
	if(s==1 || s=="Y") 
		objPopup  = window.open(url,'','width='+w+',height='+h+',left='+l+',top='+t+',resizable=0,scrollbars=1');
	else if (s=="" || s==0 || s=="N" || !s) 
		objPopup = window.open(url,'','width='+w+',height='+h+',left='+l+',top='+t+',resizable=0,scrollbars=0,status=0');
	else if (s=="E") //전자자원 팝업 
		objPopup = window.open(url,'_blank','width='+w+',height='+h+',left='+l+',top='+t+',resizable=1,menubar=0,toolbar=no,scrollbars=1,status=0');
	else
		objPopup = window.open(url,'_blank','width='+w+',height='+h+',left='+l+',top='+t+',resizable=1,menubar=1,toolbar=yes,scrollbars=1,status=0');
	if (objPopup == null) { 
		fn_alert("차단된 팝업창을 허용해 주십시오."); 
	} 
	return objPopup;
}



//숫자만 입력하게 한다.
//onkeydown="return onlyNumber();"
function onlyNumber() {
	 if ((window.event.keyCode == 8) || (window.event.keyCode == 9) || (window.event.keyCode == 46)) { //백스페이스키와  tab, del키는 먹게한다.
	      window.event.returnValue=true;
	  } else if ((window.event.keyCode >= 96) && (window.event.keyCode <= 105)) { //숫자패드는 먹게 한다.
		 		window.event.returnValue=true;
	  } else if( (window.event.keyCode<48) || (window.event.keyCode>57) ) {
	      window.event.returnValue=false;
	  }
}


/**
 * 바이트 문자 입력가능 문자수 체크
 * 
 
 * @param title : tag title
 * @param maxLength : 최대 입력가능 수 (byte)
 * @returns {Boolean}
 * 2017-07-12 wonki
 */
function maxLengthCheck(id, title, maxLength){
	
     var obj = $("#"+id);
     if(maxLength == null) {
         maxLength = obj.attr("maxLength") != null ? obj.attr("maxLength") : 1000;
     }
 
     if(Number(byteCheck(obj)) > Number(maxLength)) {
         alert(title + "이(가) 입력가능문자수를 초과하였습니다.\n(영문, 숫자, 일반 특수문자 : " + maxLength + " / 한글, 한자, 기타 특수문자 : " + parseInt(maxLength/2, 10) + ").");
         obj.focus();
         return false;
     } else {
         return true;
     }
}
/**
* 바이트수 반환  
* 
* @param el : tag jquery object
* @returns {Number}
*/


function byteCheck(el){
    var codeByte = 0;
    for (var idx = 0; idx < el.val().length; idx++) {
        var oneChar = escape(el.val().charAt(idx));
        if ( oneChar.length == 1 ) {
            codeByte ++;
        } else if (oneChar.indexOf("%u") != -1) {
            codeByte += 2;
        } else if (oneChar.indexOf("%") != -1) {
            codeByte ++;
        }
    }
    return codeByte;
}


/**
* 바이트수 반환2  
* 
* @param el : tag jquery object
* @returns {Number}
*/


function byteCheck2(value){
    var codeByte = 0;
    for (var idx = 0; idx < value.length; idx++) {
        var oneChar = escape(value.charAt(idx));
        if ( oneChar.length == 1 ) {
            codeByte ++;
        } else if (oneChar.indexOf("%u") != -1) {
            codeByte += 2;
        } else if (oneChar.indexOf("%") != -1) {
            codeByte ++;
        }
    }
    return codeByte;
}


/**
 * 입력값이 null인지 체크하고 null인경우 해당 input box에 포커스를 준다.
 * @param objs : 체크할 input 선택자(목록)
 * wonki
 */
function cmmfn_check_inputnull(objs)
{
	var addcontinue = true;
	objs.each(function(){
		if($(this).val() == "")
		{
			alert($(this).attr("title") + " 은/는 반드시 입력해주십시오.");
			$(this).focus();
			addcontinue = false;
			return false;
		}
	});
	
	return addcontinue;
}

/**
 * 유효성검사
 */	
var cmmCheck ={
		/**
		 * 필드가 비어있는 지 검사
		 */
		isValue: function(str){
			if((str == null) || (str == "") || cmmCheck.isblank(str))
			return false;
		return true;
		},
	
		/**
		 * 필드가 비어있는 지 검사
		 */
		isblank: function(str) {
			for(var i = 0; i < str.length; i++){
				var c = str.charAt(i);
				if( (c != ' ') && (c != '\n') && (c != '\et')){
					return false;
				}
			}
		return true;
		},
	
		/**
		 * 정규식(Regular Exxpression)을 사용한 앞뒤 트림이다.
		 */
		trim: function(str) {
			regExp = /([^\s*$]?)(\s*$)/;
			newStr = str.replace(regExp, "$1");
			regExp = /(^\s*)(.+)/;
			newStr = newStr.replace(regExp, "$2");
	
			return newStr;
		}
	
	}

//날짜 유효성 체크
function fn_validDate(obj) {
 	var str =  $(obj).val();

	  if(str!=""){
	
		  oDate = new Date();
		  oDate.setFullYear(str.substring(0, 4));
		  oDate.setMonth(parseInt(str.substring(5, 7)) - 1);
		  oDate.setDate(str.substring(8,10));

		  if( oDate.getFullYear()     != str.substring(0, 4)
		      || oDate.getMonth() + 1 != str.substring(5, 7)
		      || oDate.getDate()      != str.substring(8,10) ) {
	   	    
		  alert("날짜 형식이 유효하지 않습니다.");
		  $(obj).val("");
		  $(obj).focus();
		  
	      return false;
	      
	 	  }
	  }
}


function fn_downloadUpdate(fileKey, contextName, pageTitle , idVal , gbn){
	
	popAttfileViewIn(fileKey, contextName, pageTitle);
	
	var urlInfo = "";
	var params = {};
		
	if(gbn == 'report'){
		urlInfo = ctxt +"/archive/report/reportDownUpdate.do?upd_yn=Y"; 
		params.rep_id = idVal;
	}else{
		urlInfo = ctxt +"/archive/rnd/rndDownUpdate.do?upd_yn=Y";
		params.rnd_id = idVal;
	}	

	$.ajax({
		url : urlInfo , 
		data : params,
		type : 'post',
		dataType : 'text',
		success : function(data) {	
	
			
		}
	}); 
	
}


function fdate(id){
	
	$.datepicker.regional['ko'] = {
	        closeText: '닫기',
	        prevText: '이전달',
	        nextText: '다음달',
	        currentText: '오늘',
	        monthNames: ['1월(JAN)','2월(FEB)','3월(MAR)','4월(APR)','5월(MAY)','6월(JUN)',
	        '7월(JUL)','8월(AUG)','9월(SEP)','10월(OCT)','11월(NOV)','12월(DEC)'],
	        monthNamesShort: ['1월','2월','3월','4월','5월','6월',
	        '7월','8월','9월','10월','11월','12월'],
	        dayNames: ['일','월','화','수','목','금','토'],
	        dayNamesShort: ['일','월','화','수','목','금','토'],
	        dayNamesMin: ['일','월','화','수','목','금','토'],
	        weekHeader: 'Wk',
	        dateFormat: 'yy-mm-dd',
	        firstDay: 0,
	        isRTL: false,
	        showMonthAfterYear: true,
	        yearSuffix: '',
	        showOn: 'both',
	        buttonImage: 'http://images.jautour.com/jautour/images/main/search/btn_cale.gif',
	        buttonImageOnly:true,
	        buttonText: "달력",
	        changeMonth: true,
	        changeYear: true,
	        showButtonPanel: true,
	        yearRange: 'c-99:c+99',
	    };
	    $.datepicker.setDefaults($.datepicker.regional['ko']);
	  
	    var datepicker_default = {
	        showOn: 'both',
	        buttonText: "달력",
	        currentText: "이번달",
	        changeMonth: true,
	        changeYear: true,
	        showButtonPanel: true,
	        yearRange: 'c-99:c+99',
	        showOtherMonths: true,
	        selectOtherMonths: true
	    }
	    
	  
	    datepicker_default.closeText = "선택";
	    datepicker_default.dateFormat = "yy-mm";
	    datepicker_default.onClose = function (dateText, inst) {
	        var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
	        var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
	        $(this).datepicker( "option", "defaultDate", new Date(year, month, 1) );
	        $(this).datepicker('setDate', new Date(year, month, 1));
	    }
	  
	    datepicker_default.beforeShow = function () {
	        var selectDate = $("#"+id).val().split("-");
	        var year = Number(selectDate[0]);
	        var month = Number(selectDate[1]) - 1;
	        $(this).datepicker( "option", "defaultDate", new Date(year, month, 1) );
	    }
	    
	    $("#"+id).datepicker(datepicker_default);
	
}


function ldate(id){
	
	$.datepicker.regional['ko'] = {
	        closeText: '닫기',
	        prevText: '이전달',
	        nextText: '다음달',
	        currentText: '오늘',
	        monthNames: ['1월(JAN)','2월(FEB)','3월(MAR)','4월(APR)','5월(MAY)','6월(JUN)',
	        '7월(JUL)','8월(AUG)','9월(SEP)','10월(OCT)','11월(NOV)','12월(DEC)'],
	        monthNamesShort: ['1월','2월','3월','4월','5월','6월',
	        '7월','8월','9월','10월','11월','12월'],
	        dayNames: ['일','월','화','수','목','금','토'],
	        dayNamesShort: ['일','월','화','수','목','금','토'],
	        dayNamesMin: ['일','월','화','수','목','금','토'],
	        weekHeader: 'Wk',
	        dateFormat: 'yy-mm-dd',
	        firstDay: 0,
	        isRTL: false,
	        showMonthAfterYear: true,
	        yearSuffix: '',
	        showOn: 'both',
	        buttonText: "달력",
	        changeMonth: true,
	        changeYear: true,
	        showButtonPanel: true,
	        yearRange: 'c-99:c+99',
	    };
	    $.datepicker.setDefaults($.datepicker.regional['ko']);
	  
	    var datepicker_default = {
	        showOn: 'both',
	        buttonText: "달력",
	        currentText: "이번달",
	        changeMonth: true,
	        changeYear: true,
	        showButtonPanel: true,
	        yearRange: 'c-99:c+99',
	        showOtherMonths: true,
	        selectOtherMonths: true
	    }
	  
	    datepicker_default.closeText = "선택";
	    datepicker_default.dateFormat = "yy-mm";
	    datepicker_default.onClose = function (dateText, inst) {
	        var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
	        var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
	        $(this).datepicker( "option", "defaultDate", new Date(year, month, 1) );
	        $(this).datepicker('setDate', new Date(year, month, 1));
	    }
	  
	    datepicker_default.beforeShow = function () {
	        var selectDate = $("#"+id).val().split("-");
	        var year = Number(selectDate[0]);
	        var month = Number(selectDate[1]) - 1;
	        $(this).datepicker( "option", "defaultDate", new Date(year, month, 1) );
	    }
	  
	    $("#"+id).datepicker(datepicker_default);
	
}



// JUI 차트 :  MAX NUM
function chartMax(val){
	var numLeng ="";
	var resultNum = "";
	var maxNum = Math.max(val);
	maxNum = maxNum.toString();
	numLeng = maxNum.length;
	
	if(numLeng == 7){
		resultNum = parseInt(maxNum.substring(0,1))+1 + "000000";
	}else if(numLeng == 6){
		resultNum = parseInt(maxNum.substring(0,1))+1 + "00000";
	}else if(numLeng == 5){
		resultNum = parseInt(maxNum.substring(0,1))+1 + "0000";
	}else if(numLeng == 4){
		resultNum = parseInt(maxNum.substring(0,1))+1 + "000";
	}else if(numLeng == 3){
		resultNum = parseInt(maxNum.substring(0,1))+1 + "00";
	}else if(numLeng == 2){
		resultNum = parseInt(maxNum.substring(0,1))+1+ "0";
	}else{
		resultNum = 10;
	}
		
	
	return resultNum;
}



//천단위 콤마 넣기
function comma(str) {
	if(str != "" || str != 'undefined' ){ 
		  str = String(str);
		  return str.replace(/(\d)(?=(?:\d{3})+(?!\d))/g, '$1,');
	}
} 

//풀기
function uncomma(str) {
	if(str != "" || str != 'undefined' ){ 
	    str = String(str);
	    return str.replace(/[^\d]+/g, '');
	}   
}
  
/**
 * text상자에 데이트피커를 적용한다.
 * @param {Object} selobjs : 셀렉터 String
 * @param {Object} format : 날짜 포맷 (yy-mm-dd)
 * by wonki
*/
function cmmfn_set_datepicker(selobjs, format)
{
   //var dateform = (format == null || format == undefined) ? 'yy-mm-dd' : format;
   var dateform = (format == null || format == undefined) ? "%Y-%m-%d" : format;
   selobjs.each(function(){
      var pickobj = $(this);
      if(pickobj.prop('type') == "text")
      {
      did = pickobj.attr("id");
      eval("datePickerController.destroyDatePicker(\"" + did + "\")");
      eval("\
            datePickerController.createDatePicker({\
               formElements:{\"" + did +"\" :\"%Y-%m-%d\"},\
            });\
         ");
      
      pickobj
         .css({"font-size":"11px","width":"65px","height":"24px","text-align":"center", "z-index":"11", "vertical-align" : "middle"});
         //.prop("placeholder", cmmfn_date_to_string(new Date(), "DD", "-"));
      
      pickobj.attr("readonly",true);
      
      }
   });
}   