/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-01-29 06:05:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.write;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class agree_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"ko\" lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("\t<title>임상연구정보서비스 등록 동의서</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"wrapper\">\r\n");
      out.write("\t<div id=\"container\">\r\n");
      out.write("\t\t\t<div id=\"sideB\" class=\"sideB\">\r\n");
      out.write("\t\t\t\t\t<div class=\"step\">\r\n");
      out.write("\t\t\t\t\t\t<img src=\"../images/request_top.gif\" alt=\"임상연구정보공유서비스 등록 동의서\" />\r\n");
      out.write("\t\t\t\t\t\t<div id=\"requestinfo\">\r\n");
      out.write("\t\t\t\t\t\t\t질병관리본부에서 운영하는 &#60;임상연구정보서비스&#62;에 임상연구를 등록하기 위해서는 아래 사항에 동의하여야 합니다.</div>\r\n");
      out.write("\t\t\t\t\t\t<img src=\"../images/cris_sline686.gif\" alt=\"\" />\r\n");
      out.write("\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t<textarea title=\"임상연구정보서비스 등록 동의서 내용\" style=\"width:650px; height:350px; margin:5px 0px 5px 2px; padding:20px 15px 20px 15px;\" readonly=\"readonly\">\r\n");
      out.write("1. 목 적\r\n");
      out.write("본 임상연구정보서비스(Clinical Research information Service: CRIS)는 국내·외 임상연구의 정보 공유를 통하여, 과학적이고 윤리적인 임상연구 수행을 촉진하기 위한 등록시스템입니다.\r\n");
      out.write("\r\n");
      out.write("2. 유의사항\r\n");
      out.write("1) 임상연구정보는 정확한 자료와 검증된 보편·타당한 용어를 사용하여 등록합니다.\r\n");
      out.write("2) 임상연구는 등록 전에 각 기관연구윤리심의위원회(Institutional Review Board)로부터 승인을 받아야 합니다.\r\n");
      out.write("3) 임상연구정보의 갱신은 연구종료 시까지 승인일/갱신일 기준으로 매 6개월 이내에 이루어져야 합니다.\r\n");
      out.write("4) 부정확한 정보 또는 이중등록을 방지하기 위하여, 다기관연구인 경우에는 책임 연구자의 소속기관에서 임상연구정보를 등록하여야 합니다.\r\n");
      out.write("\r\n");
      out.write("3. 등록 시 혜택\r\n");
      out.write("1) 본 CRIS는 WHO Primary registry에 등록되어 있어, 타국가의 임상 연구등록시스템에 이중 등록할 필요가 없습니다.\r\n");
      out.write("2) 등록된 임상연구정보는 관리자의 승인시점부터 웹상에서 실시간으로 공개되며, 국내·외 임상연구자와 공유할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("4. 권한 및 책임\r\n");
      out.write("1) 본 CRIS에 등록된 임상연구정보는 책임연구자의 권한을 부여받고, CRIS 관리자가 승인한 등록자에 의해서만 정보의 등록 및 갱신이 가능합니다.\r\n");
      out.write("2) 등록된 정보에 대한 일체의 권한 및 의무와 책임은 각 임상연구정보를 등록한 책임연구자에게 있습니다.\r\n");
      out.write("\r\n");
      out.write("CRIS는 등록된 임상연구정보의 정확성 및 이를 등록함으로써 발생할 수 있는 직접 또는 간접적 손실에 대하여 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("본 연구자는 동의서 설명을 이해하였으며, CRIS의 요구사항 및 임상연구정보제공에 대하여 동의합니다.\r\n");
      out.write("\t\t\t\t\t\t\t</textarea>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div style=\"margin:5px 0px 15px 0px;\">※ 기타 문의사항은 CRIS 관리자(043-249-3021)에게 연락하여 주시기 바랍니다.</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"tcenter\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctxt}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/write/cris_write.do\"><img src=\"../images/btn_agree.gif\" alt=\"동의합니다\" /></a><a href=\"javascript:alert('동의하셔야 등록이 가능합니다');\"><img src=\"../images/btn_disagree.gif\" alt=\"동의하지 않습니다\" /></a></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("  </div><!-- //container -->\r\n");
      out.write("</div><!-- wrapper -->\r\n");
      out.write("\r\n");
      out.write("<hr />  \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
