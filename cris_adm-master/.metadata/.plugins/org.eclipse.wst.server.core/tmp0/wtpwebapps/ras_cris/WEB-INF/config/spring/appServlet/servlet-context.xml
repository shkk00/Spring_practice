<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc 
  http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd">

  <!-- Enables the Spring MVC @Controller programming model -->
  <annotation-driven />

  <!-- Controller scan -->
  <context:component-scan base-package="kr.go.cris">
    <context:include-filter expression="org.springframework.stereotype.Controller" type="annotation" />
  </context:component-scan>

  <!-- Configures Handler Interceptors -->  
  <interceptors>
    <interceptor>
      <mapping path="/**/*"/>
      <exclude-mapping path="/login/*"/>
      <exclude-mapping path="/sms/**/*"/>
      <exclude-mapping path="/resources/**/*"/>
      <exclude-mapping path="/error/*"/>
      <exclude-mapping path="/robots.txt"/>
      <beans:bean class="kr.go.cris.commons.interceptors.LoginInterceptor">	
      </beans:bean>
       
    </interceptor>
  </interceptors>

  <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
  <resources mapping="/resources/**" location="/resources/" />
  <!-- SSO 처리를 위한 것 -->

  <!-- robots.txt -->
  <resources mapping="/robots.txt" location="/" />

  <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
  <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <beans:property name="prefix" value="/WEB-INF/views/" />
    <beans:property name="suffix" value=".jsp" />
    <beans:property name="order" value="2" />
  </beans:bean>

  <!-- Tiles viewResolver -->
 <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
  <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
  <beans:property name="order" value="1" />  
 </beans:bean>
 
 <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
  <beans:property name="definitions">
   <beans:list>
    <beans:value>/WEB-INF/config/tiles/tiles-defs.xml</beans:value>
   </beans:list>
  </beans:property>
 </beans:bean>

  <!-- Configure the multipart resolver -->
  <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <beans:property name="maxUploadSize" value="1073741824"/>
      <beans:property name="defaultEncoding" value="UTF-8"/>
  </beans:bean>

</beans:beans>
