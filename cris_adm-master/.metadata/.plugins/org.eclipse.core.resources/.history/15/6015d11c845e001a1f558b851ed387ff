package kr.go.cris.ptl.board.columnAbbreviation.controller;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.go.cris.base.controller.BaseController;
import kr.go.cris.ptl.board.columnAbbreviation.service.ColmnAbbrevtService;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
public class ColumnAbbreviationController extends BaseController{

	@Resource
	ColmnAbbrevtService colAbbrvtSrvce;
	
	@RequestMapping("/board/columnAbbreviation/columnAbbreviation.do")
	public String agree(HttpServletRequest request, HttpServletResponse response, Model model)  throws IOException, SQLException , NullPointerException {
		
//		model.addAttribute("form_cd",getCodeList("FORM_CD"));
//		model.addAttribute("data_type",getCodeList("DATA_TYPE"));
//		model.addAttribute("form_type",getCodeList("FORM_TYPE"));
//		model.addAttribute("use_yn",getCodeList("USE_YN"));
		
		return "board/columnAbbreviation.tiles";
	}
	
	
//	@RequestMapping(value="/mng/form/beforeInsertFrmBrd.do")참고
	@RequestMapping(value="/board/columnAbbreviation/colAbbrevtView.do")
	@ResponseBody
	public void colAbbrevtView(Model model, HttpServletRequest request)  throws IOException , SQLException , NullPointerException, NumberFormatException, java.text.ParseException {
		
		List<Map<String, Object>> selectColumnList = colAbbrvtSrvce.selectColAbbrvt();
		
		List<Map<String, Object>> sendList = new ArrayList<Map<String,Object>>();
		Map<String, Object> sendMap = new HashMap<String, Object>();
		
		String[] vowelArr = {"a","e","i","o","u"}; 
//		a,e,i,o,u,y
//		이미 약어는 예외 : _IP , _YN , _EN ,_OLD, _UNIT (무조건 맨 뒤는 X)
//		본래 4글자는 놔두기 -> _별 자른 후에는 첫번째 3글자 이하는 그대로 && 맨 뒤 위 예외들은 그대로
//		varchar2 20글자당  40 == char도 동일
		System.out.println("*************************************");
//		int setTheSize = 0;
		int colSeq = 0;  // input Map
		for(Map<String, Object>mapKey : selectColumnList){
			for(String key : mapKey.keySet()){
				colSeq++;
				sendMap.put("idx", colSeq);
				
//				System.out.println(key+"\t:\t"+key.length());
				if(key.length() <=4 ){
					sendMap.put("colAbbrevt", key);
				} else {
					String[] keyArr = key.split("_");
					
//					System.out.println(key);
					
					String completFirst = "";
					if(keyArr[0].length() > 3){
						String [] tmpArr;
						String tmpStr = keyArr[0];
//						System.out.println(tmpStr +"\t > 3");
						
						tmpArr = tmpStr.split("");
						for(int k =0; k<tmpArr.length ; k++){
							String tmp = tmpArr[k];
							for (String vowelStr : vowelArr){
								if(tmp.equals(vowelStr)){
									completFirst+=tmpArr[k].replace(tmp, "");
								} 
									
							}
						}
						System.out.println(completFirst);
						
					} else {
//						System.out.println(keyArr[0]);
					}
					
					
					
//					for(int j =0 ; j < keyArr.length; j++){
//						System.out.println(keyArr[j]);
//					}
				}
			}
			sendList.add(sendMap);
		}
		
//		System.out.println(colSeq); //68 =>if list size = (colSeq -1)
		
		
		
		
		
//		return sendList;
	}
	
}
